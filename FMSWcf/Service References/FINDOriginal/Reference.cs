//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WlocateWeb.FINDOriginal {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MileageReport", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class MileageReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MileageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateEx {
            get {
                return this.DateExField;
            }
            set {
                if ((object.ReferenceEquals(this.DateExField, value) != true)) {
                    this.DateExField = value;
                    this.RaisePropertyChanged("DateEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTimeEx {
            get {
                return this.EndTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeExField, value) != true)) {
                    this.EndTimeExField = value;
                    this.RaisePropertyChanged("EndTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MileageID {
            get {
                return this.MileageIDField;
            }
            set {
                if ((this.MileageIDField.Equals(value) != true)) {
                    this.MileageIDField = value;
                    this.RaisePropertyChanged("MileageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTimeEx {
            get {
                return this.StartTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeExField, value) != true)) {
                    this.StartTimeExField = value;
                    this.RaisePropertyChanged("StartTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalTimeField, value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class EventInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AckTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AckUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AckUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PosIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WlocateWeb.FINDOriginal.PosInfo PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RxTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AckTime {
            get {
                return this.AckTimeField;
            }
            set {
                if ((this.AckTimeField.Equals(value) != true)) {
                    this.AckTimeField = value;
                    this.RaisePropertyChanged("AckTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AckUser {
            get {
                return this.AckUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AckUserField, value) != true)) {
                    this.AckUserField = value;
                    this.RaisePropertyChanged("AckUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AckUserID {
            get {
                return this.AckUserIDField;
            }
            set {
                if ((this.AckUserIDField.Equals(value) != true)) {
                    this.AckUserIDField = value;
                    this.RaisePropertyChanged("AckUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertLevel {
            get {
                return this.AlertLevelField;
            }
            set {
                if ((this.AlertLevelField.Equals(value) != true)) {
                    this.AlertLevelField = value;
                    this.RaisePropertyChanged("AlertLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((this.FlagField.Equals(value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PosID {
            get {
                return this.PosIDField;
            }
            set {
                if ((this.PosIDField.Equals(value) != true)) {
                    this.PosIDField = value;
                    this.RaisePropertyChanged("PosID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WlocateWeb.FINDOriginal.PosInfo Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RxTime {
            get {
                return this.RxTimeField;
            }
            set {
                if ((this.RxTimeField.Equals(value) != true)) {
                    this.RxTimeField = value;
                    this.RaisePropertyChanged("RxTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PosInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class PosInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BatteryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FixIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HDOPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IgnitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PosIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RxTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SatellitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Battery {
            get {
                return this.BatteryField;
            }
            set {
                if ((this.BatteryField.Equals(value) != true)) {
                    this.BatteryField = value;
                    this.RaisePropertyChanged("Battery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Course {
            get {
                return this.CourseField;
            }
            set {
                if ((this.CourseField.Equals(value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Engine {
            get {
                return this.EngineField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineField, value) != true)) {
                    this.EngineField = value;
                    this.RaisePropertyChanged("Engine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fix {
            get {
                return this.FixField;
            }
            set {
                if ((object.ReferenceEquals(this.FixField, value) != true)) {
                    this.FixField = value;
                    this.RaisePropertyChanged("Fix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FixID {
            get {
                return this.FixIDField;
            }
            set {
                if ((this.FixIDField.Equals(value) != true)) {
                    this.FixIDField = value;
                    this.RaisePropertyChanged("FixID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fuel {
            get {
                return this.FuelField;
            }
            set {
                if ((this.FuelField.Equals(value) != true)) {
                    this.FuelField = value;
                    this.RaisePropertyChanged("Fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HDOP {
            get {
                return this.HDOPField;
            }
            set {
                if ((this.HDOPField.Equals(value) != true)) {
                    this.HDOPField = value;
                    this.RaisePropertyChanged("HDOP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ignition {
            get {
                return this.IgnitionField;
            }
            set {
                if ((this.IgnitionField.Equals(value) != true)) {
                    this.IgnitionField = value;
                    this.RaisePropertyChanged("Ignition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocID {
            get {
                return this.LocIDField;
            }
            set {
                if ((this.LocIDField.Equals(value) != true)) {
                    this.LocIDField = value;
                    this.RaisePropertyChanged("LocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PosID {
            get {
                return this.PosIDField;
            }
            set {
                if ((this.PosIDField.Equals(value) != true)) {
                    this.PosIDField = value;
                    this.RaisePropertyChanged("PosID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosX {
            get {
                return this.PosXField;
            }
            set {
                if ((this.PosXField.Equals(value) != true)) {
                    this.PosXField = value;
                    this.RaisePropertyChanged("PosX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosY {
            get {
                return this.PosYField;
            }
            set {
                if ((this.PosYField.Equals(value) != true)) {
                    this.PosYField = value;
                    this.RaisePropertyChanged("PosY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosZ {
            get {
                return this.PosZField;
            }
            set {
                if ((this.PosZField.Equals(value) != true)) {
                    this.PosZField = value;
                    this.RaisePropertyChanged("PosZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RxTime {
            get {
                return this.RxTimeField;
            }
            set {
                if ((this.RxTimeField.Equals(value) != true)) {
                    this.RxTimeField = value;
                    this.RaisePropertyChanged("RxTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Satellites {
            get {
                return this.SatellitesField;
            }
            set {
                if ((this.SatellitesField.Equals(value) != true)) {
                    this.SatellitesField = value;
                    this.RaisePropertyChanged("Satellites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneID {
            get {
                return this.ZoneIDField;
            }
            set {
                if ((this.ZoneIDField.Equals(value) != true)) {
                    this.ZoneIDField = value;
                    this.RaisePropertyChanged("ZoneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MixerReport", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class MixerReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class PhoneInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class MessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageID {
            get {
                return this.MessageIDField;
            }
            set {
                if ((this.MessageIDField.Equals(value) != true)) {
                    this.MessageIDField = value;
                    this.RaisePropertyChanged("MessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipients {
            get {
                return this.RecipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientsField, value) != true)) {
                    this.RecipientsField = value;
                    this.RaisePropertyChanged("Recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RawData", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class RawData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RxTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataID {
            get {
                return this.DataIDField;
            }
            set {
                if ((this.DataIDField.Equals(value) != true)) {
                    this.DataIDField = value;
                    this.RaisePropertyChanged("DataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RxTime {
            get {
                return this.RxTimeField;
            }
            set {
                if ((this.RxTimeField.Equals(value) != true)) {
                    this.RxTimeField = value;
                    this.RaisePropertyChanged("RxTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUpload", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class FileUpload : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CellID", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class CellID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ControlNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mncField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ControlNo {
            get {
                return this.ControlNoField;
            }
            set {
                if ((this.ControlNoField.Equals(value) != true)) {
                    this.ControlNoField = value;
                    this.RaisePropertyChanged("ControlNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cid {
            get {
                return this.cidField;
            }
            set {
                if ((object.ReferenceEquals(this.cidField, value) != true)) {
                    this.cidField = value;
                    this.RaisePropertyChanged("cid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lac {
            get {
                return this.lacField;
            }
            set {
                if ((object.ReferenceEquals(this.lacField, value) != true)) {
                    this.lacField = value;
                    this.RaisePropertyChanged("lac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lon {
            get {
                return this.lonField;
            }
            set {
                if ((this.lonField.Equals(value) != true)) {
                    this.lonField = value;
                    this.RaisePropertyChanged("lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mcc {
            get {
                return this.mccField;
            }
            set {
                if ((object.ReferenceEquals(this.mccField, value) != true)) {
                    this.mccField = value;
                    this.RaisePropertyChanged("mcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mnc {
            get {
                return this.mncField;
            }
            set {
                if ((object.ReferenceEquals(this.mncField, value) != true)) {
                    this.mncField = value;
                    this.RaisePropertyChanged("mnc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class AssetInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> ActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlertZonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CurfewEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CurfewStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GprsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double IdleLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IgnitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastEnterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastEventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastExitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastFixIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WlocateWeb.FINDOriginal.PosInfo LastGpsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastGpsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastIdleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WlocateWeb.FINDOriginal.PosInfo LastPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LastPosIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MileageDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageDistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> TripsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> Activities {
            get {
                return this.ActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitiesField, value) != true)) {
                    this.ActivitiesField = value;
                    this.RaisePropertyChanged("Activities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertLevel {
            get {
                return this.AlertLevelField;
            }
            set {
                if ((this.AlertLevelField.Equals(value) != true)) {
                    this.AlertLevelField = value;
                    this.RaisePropertyChanged("AlertLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertZones {
            get {
                return this.AlertZonesField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertZonesField, value) != true)) {
                    this.AlertZonesField = value;
                    this.RaisePropertyChanged("AlertZones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CurfewEnd {
            get {
                return this.CurfewEndField;
            }
            set {
                if ((this.CurfewEndField.Equals(value) != true)) {
                    this.CurfewEndField = value;
                    this.RaisePropertyChanged("CurfewEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CurfewStart {
            get {
                return this.CurfewStartField;
            }
            set {
                if ((this.CurfewStartField.Equals(value) != true)) {
                    this.CurfewStartField = value;
                    this.RaisePropertyChanged("CurfewStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gprs {
            get {
                return this.GprsField;
            }
            set {
                if ((this.GprsField.Equals(value) != true)) {
                    this.GprsField = value;
                    this.RaisePropertyChanged("Gprs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gps {
            get {
                return this.GpsField;
            }
            set {
                if ((this.GpsField.Equals(value) != true)) {
                    this.GpsField = value;
                    this.RaisePropertyChanged("Gps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Home {
            get {
                return this.HomeField;
            }
            set {
                if ((this.HomeField.Equals(value) != true)) {
                    this.HomeField = value;
                    this.RaisePropertyChanged("Home");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IdleLimit {
            get {
                return this.IdleLimitField;
            }
            set {
                if ((this.IdleLimitField.Equals(value) != true)) {
                    this.IdleLimitField = value;
                    this.RaisePropertyChanged("IdleLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ignition {
            get {
                return this.IgnitionField;
            }
            set {
                if ((this.IgnitionField.Equals(value) != true)) {
                    this.IgnitionField = value;
                    this.RaisePropertyChanged("Ignition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastEnterID {
            get {
                return this.LastEnterIDField;
            }
            set {
                if ((this.LastEnterIDField.Equals(value) != true)) {
                    this.LastEnterIDField = value;
                    this.RaisePropertyChanged("LastEnterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastEventID {
            get {
                return this.LastEventIDField;
            }
            set {
                if ((this.LastEventIDField.Equals(value) != true)) {
                    this.LastEventIDField = value;
                    this.RaisePropertyChanged("LastEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastExitID {
            get {
                return this.LastExitIDField;
            }
            set {
                if ((this.LastExitIDField.Equals(value) != true)) {
                    this.LastExitIDField = value;
                    this.RaisePropertyChanged("LastExitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastFixID {
            get {
                return this.LastFixIDField;
            }
            set {
                if ((this.LastFixIDField.Equals(value) != true)) {
                    this.LastFixIDField = value;
                    this.RaisePropertyChanged("LastFixID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WlocateWeb.FINDOriginal.PosInfo LastGps {
            get {
                return this.LastGpsField;
            }
            set {
                if ((object.ReferenceEquals(this.LastGpsField, value) != true)) {
                    this.LastGpsField = value;
                    this.RaisePropertyChanged("LastGps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastGpsID {
            get {
                return this.LastGpsIDField;
            }
            set {
                if ((this.LastGpsIDField.Equals(value) != true)) {
                    this.LastGpsIDField = value;
                    this.RaisePropertyChanged("LastGpsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastIdle {
            get {
                return this.LastIdleField;
            }
            set {
                if ((this.LastIdleField.Equals(value) != true)) {
                    this.LastIdleField = value;
                    this.RaisePropertyChanged("LastIdle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WlocateWeb.FINDOriginal.PosInfo LastPos {
            get {
                return this.LastPosField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPosField, value) != true)) {
                    this.LastPosField = value;
                    this.RaisePropertyChanged("LastPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LastPosID {
            get {
                return this.LastPosIDField;
            }
            set {
                if ((this.LastPosIDField.Equals(value) != true)) {
                    this.LastPosIDField = value;
                    this.RaisePropertyChanged("LastPosID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MileageDate {
            get {
                return this.MileageDateField;
            }
            set {
                if ((this.MileageDateField.Equals(value) != true)) {
                    this.MileageDateField = value;
                    this.RaisePropertyChanged("MileageDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MileageDist {
            get {
                return this.MileageDistField;
            }
            set {
                if ((this.MileageDistField.Equals(value) != true)) {
                    this.MileageDistField = value;
                    this.RaisePropertyChanged("MileageDist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpeedLimit {
            get {
                return this.SpeedLimitField;
            }
            set {
                if ((this.SpeedLimitField.Equals(value) != true)) {
                    this.SpeedLimitField = value;
                    this.RaisePropertyChanged("SpeedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusEx {
            get {
                return this.StatusExField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusExField, value) != true)) {
                    this.StatusExField = value;
                    this.RaisePropertyChanged("StatusEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> Trips {
            get {
                return this.TripsField;
            }
            set {
                if ((object.ReferenceEquals(this.TripsField, value) != true)) {
                    this.TripsField = value;
                    this.RaisePropertyChanged("Trips");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class ActivityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArriveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArriveTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WlocateWeb.FINDOriginal.ZoneInfo ZoneInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNum {
            get {
                return this.AccountNumField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumField, value) != true)) {
                    this.AccountNumField = value;
                    this.RaisePropertyChanged("AccountNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActivityID {
            get {
                return this.ActivityIDField;
            }
            set {
                if ((this.ActivityIDField.Equals(value) != true)) {
                    this.ActivityIDField = value;
                    this.RaisePropertyChanged("ActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityNum {
            get {
                return this.ActivityNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNumField, value) != true)) {
                    this.ActivityNumField = value;
                    this.RaisePropertyChanged("ActivityNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArriveTime {
            get {
                return this.ArriveTimeField;
            }
            set {
                if ((this.ArriveTimeField.Equals(value) != true)) {
                    this.ArriveTimeField = value;
                    this.RaisePropertyChanged("ArriveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArriveTimeEx {
            get {
                return this.ArriveTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.ArriveTimeExField, value) != true)) {
                    this.ArriveTimeExField = value;
                    this.RaisePropertyChanged("ArriveTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepartTime {
            get {
                return this.DepartTimeField;
            }
            set {
                if ((this.DepartTimeField.Equals(value) != true)) {
                    this.DepartTimeField = value;
                    this.RaisePropertyChanged("DepartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartTimeEx {
            get {
                return this.DepartTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartTimeExField, value) != true)) {
                    this.DepartTimeExField = value;
                    this.RaisePropertyChanged("DepartTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndOffset {
            get {
                return this.EndOffsetField;
            }
            set {
                if ((object.ReferenceEquals(this.EndOffsetField, value) != true)) {
                    this.EndOffsetField = value;
                    this.RaisePropertyChanged("EndOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartOffset {
            get {
                return this.StartOffsetField;
            }
            set {
                if ((object.ReferenceEquals(this.StartOffsetField, value) != true)) {
                    this.StartOffsetField = value;
                    this.RaisePropertyChanged("StartOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneID {
            get {
                return this.ZoneIDField;
            }
            set {
                if ((this.ZoneIDField.Equals(value) != true)) {
                    this.ZoneIDField = value;
                    this.RaisePropertyChanged("ZoneID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WlocateWeb.FINDOriginal.ZoneInfo ZoneInfo {
            get {
                return this.ZoneInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneInfoField, value) != true)) {
                    this.ZoneInfoField = value;
                    this.RaisePropertyChanged("ZoneInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TripInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class TripInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DestinationEnterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DestinationExitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DestinationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DieselField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OriginEnterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OriginExitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TripIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationDuration {
            get {
                return this.DestinationDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationDurationField, value) != true)) {
                    this.DestinationDurationField = value;
                    this.RaisePropertyChanged("DestinationDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DestinationEnter {
            get {
                return this.DestinationEnterField;
            }
            set {
                if ((this.DestinationEnterField.Equals(value) != true)) {
                    this.DestinationEnterField = value;
                    this.RaisePropertyChanged("DestinationEnter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DestinationExit {
            get {
                return this.DestinationExitField;
            }
            set {
                if ((this.DestinationExitField.Equals(value) != true)) {
                    this.DestinationExitField = value;
                    this.RaisePropertyChanged("DestinationExit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DestinationID {
            get {
                return this.DestinationIDField;
            }
            set {
                if ((this.DestinationIDField.Equals(value) != true)) {
                    this.DestinationIDField = value;
                    this.RaisePropertyChanged("DestinationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Diesel {
            get {
                return this.DieselField;
            }
            set {
                if ((this.DieselField.Equals(value) != true)) {
                    this.DieselField = value;
                    this.RaisePropertyChanged("Diesel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginDuration {
            get {
                return this.OriginDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginDurationField, value) != true)) {
                    this.OriginDurationField = value;
                    this.RaisePropertyChanged("OriginDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OriginEnter {
            get {
                return this.OriginEnterField;
            }
            set {
                if ((this.OriginEnterField.Equals(value) != true)) {
                    this.OriginEnterField = value;
                    this.RaisePropertyChanged("OriginEnter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OriginExit {
            get {
                return this.OriginExitField;
            }
            set {
                if ((this.OriginExitField.Equals(value) != true)) {
                    this.OriginExitField = value;
                    this.RaisePropertyChanged("OriginExit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginID {
            get {
                return this.OriginIDField;
            }
            set {
                if ((this.OriginIDField.Equals(value) != true)) {
                    this.OriginIDField = value;
                    this.RaisePropertyChanged("OriginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelDuration {
            get {
                return this.TravelDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelDurationField, value) != true)) {
                    this.TravelDurationField = value;
                    this.RaisePropertyChanged("TravelDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TripID {
            get {
                return this.TripIDField;
            }
            set {
                if ((this.TripIDField.Equals(value) != true)) {
                    this.TripIDField = value;
                    this.RaisePropertyChanged("TripID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class ZoneInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerimeterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellIds {
            get {
                return this.CellIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CellIdsField, value) != true)) {
                    this.CellIdsField = value;
                    this.RaisePropertyChanged("CellIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Perimeter {
            get {
                return this.PerimeterField;
            }
            set {
                if ((object.ReferenceEquals(this.PerimeterField, value) != true)) {
                    this.PerimeterField = value;
                    this.RaisePropertyChanged("Perimeter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneID {
            get {
                return this.ZoneIDField;
            }
            set {
                if ((this.ZoneIDField.Equals(value) != true)) {
                    this.ZoneIDField = value;
                    this.RaisePropertyChanged("ZoneID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlanInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class PlanInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DestinationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastTripField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DestinationID {
            get {
                return this.DestinationIDField;
            }
            set {
                if ((this.DestinationIDField.Equals(value) != true)) {
                    this.DestinationIDField = value;
                    this.RaisePropertyChanged("DestinationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationEx {
            get {
                return this.DurationExField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationExField, value) != true)) {
                    this.DurationExField = value;
                    this.RaisePropertyChanged("DurationEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastTrip {
            get {
                return this.LastTripField;
            }
            set {
                if ((this.LastTripField.Equals(value) != true)) {
                    this.LastTripField = value;
                    this.RaisePropertyChanged("LastTrip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginID {
            get {
                return this.OriginIDField;
            }
            set {
                if ((this.OriginIDField.Equals(value) != true)) {
                    this.OriginIDField = value;
                    this.RaisePropertyChanged("OriginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneReport", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class ZoneReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EnterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExitTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EnterID {
            get {
                return this.EnterIDField;
            }
            set {
                if ((this.EnterIDField.Equals(value) != true)) {
                    this.EnterIDField = value;
                    this.RaisePropertyChanged("EnterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntryTime {
            get {
                return this.EntryTimeField;
            }
            set {
                if ((this.EntryTimeField.Equals(value) != true)) {
                    this.EntryTimeField = value;
                    this.RaisePropertyChanged("EntryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExitID {
            get {
                return this.ExitIDField;
            }
            set {
                if ((this.ExitIDField.Equals(value) != true)) {
                    this.ExitIDField = value;
                    this.RaisePropertyChanged("ExitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExitTime {
            get {
                return this.ExitTimeField;
            }
            set {
                if ((this.ExitTimeField.Equals(value) != true)) {
                    this.ExitTimeField = value;
                    this.RaisePropertyChanged("ExitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExitTimeEx {
            get {
                return this.ExitTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.ExitTimeExField, value) != true)) {
                    this.ExitTimeExField = value;
                    this.RaisePropertyChanged("ExitTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpeedReport", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class SpeedReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PosIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PosID {
            get {
                return this.PosIDField;
            }
            set {
                if ((this.PosIDField.Equals(value) != true)) {
                    this.PosIDField = value;
                    this.RaisePropertyChanged("PosID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilizeReport", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class UtilizeReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AveIdle1ExMinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double IdleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Idle1ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Idle1ExMinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Idle2ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastIgnitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Move1ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Move2ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Stop1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Stop1ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Stop2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Stop2ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StopCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UtilIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetID {
            get {
                return this.AssetIDField;
            }
            set {
                if ((this.AssetIDField.Equals(value) != true)) {
                    this.AssetIDField = value;
                    this.RaisePropertyChanged("AssetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AveIdle1ExMins {
            get {
                return this.AveIdle1ExMinsField;
            }
            set {
                if ((this.AveIdle1ExMinsField.Equals(value) != true)) {
                    this.AveIdle1ExMinsField = value;
                    this.RaisePropertyChanged("AveIdle1ExMins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateEx {
            get {
                return this.DateExField;
            }
            set {
                if ((object.ReferenceEquals(this.DateExField, value) != true)) {
                    this.DateExField = value;
                    this.RaisePropertyChanged("DateEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTimeEx {
            get {
                return this.EndTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeExField, value) != true)) {
                    this.EndTimeExField = value;
                    this.RaisePropertyChanged("EndTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Idle {
            get {
                return this.IdleField;
            }
            set {
                if ((this.IdleField.Equals(value) != true)) {
                    this.IdleField = value;
                    this.RaisePropertyChanged("Idle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idle1Ex {
            get {
                return this.Idle1ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Idle1ExField, value) != true)) {
                    this.Idle1ExField = value;
                    this.RaisePropertyChanged("Idle1Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Idle1ExMins {
            get {
                return this.Idle1ExMinsField;
            }
            set {
                if ((this.Idle1ExMinsField.Equals(value) != true)) {
                    this.Idle1ExMinsField = value;
                    this.RaisePropertyChanged("Idle1ExMins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idle2Ex {
            get {
                return this.Idle2ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Idle2ExField, value) != true)) {
                    this.Idle2ExField = value;
                    this.RaisePropertyChanged("Idle2Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastIgnition {
            get {
                return this.LastIgnitionField;
            }
            set {
                if ((this.LastIgnitionField.Equals(value) != true)) {
                    this.LastIgnitionField = value;
                    this.RaisePropertyChanged("LastIgnition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Move {
            get {
                return this.MoveField;
            }
            set {
                if ((this.MoveField.Equals(value) != true)) {
                    this.MoveField = value;
                    this.RaisePropertyChanged("Move");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Move1Ex {
            get {
                return this.Move1ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Move1ExField, value) != true)) {
                    this.Move1ExField = value;
                    this.RaisePropertyChanged("Move1Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Move2Ex {
            get {
                return this.Move2ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Move2ExField, value) != true)) {
                    this.Move2ExField = value;
                    this.RaisePropertyChanged("Move2Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTimeEx {
            get {
                return this.StartTimeExField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeExField, value) != true)) {
                    this.StartTimeExField = value;
                    this.RaisePropertyChanged("StartTimeEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Stop1 {
            get {
                return this.Stop1Field;
            }
            set {
                if ((this.Stop1Field.Equals(value) != true)) {
                    this.Stop1Field = value;
                    this.RaisePropertyChanged("Stop1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stop1Ex {
            get {
                return this.Stop1ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Stop1ExField, value) != true)) {
                    this.Stop1ExField = value;
                    this.RaisePropertyChanged("Stop1Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Stop2 {
            get {
                return this.Stop2Field;
            }
            set {
                if ((this.Stop2Field.Equals(value) != true)) {
                    this.Stop2Field = value;
                    this.RaisePropertyChanged("Stop2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stop2Ex {
            get {
                return this.Stop2ExField;
            }
            set {
                if ((object.ReferenceEquals(this.Stop2ExField, value) != true)) {
                    this.Stop2ExField = value;
                    this.RaisePropertyChanged("Stop2Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StopCount {
            get {
                return this.StopCountField;
            }
            set {
                if ((this.StopCountField.Equals(value) != true)) {
                    this.StopCountField = value;
                    this.RaisePropertyChanged("StopCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalTimeField, value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UtilID {
            get {
                return this.UtilIDField;
            }
            set {
                if ((this.UtilIDField.Equals(value) != true)) {
                    this.UtilIDField = value;
                    this.RaisePropertyChanged("UtilID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeatureInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class FeatureInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class NameInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NameID {
            get {
                return this.NameIDField;
            }
            set {
                if ((this.NameIDField.Equals(value) != true)) {
                    this.NameIDField = value;
                    this.RaisePropertyChanged("NameID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class CompanyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssetLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetLimit {
            get {
                return this.AssetLimitField;
            }
            set {
                if ((this.AssetLimitField.Equals(value) != true)) {
                    this.AssetLimitField = value;
                    this.RaisePropertyChanged("AssetLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsLimit {
            get {
                return this.SmsLimitField;
            }
            set {
                if ((this.SmsLimitField.Equals(value) != true)) {
                    this.SmsLimitField = value;
                    this.RaisePropertyChanged("SmsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserLimit {
            get {
                return this.UserLimitField;
            }
            set {
                if ((this.UserLimitField.Equals(value) != true)) {
                    this.UserLimitField = value;
                    this.RaisePropertyChanged("UserLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneLimit {
            get {
                return this.ZoneLimitField;
            }
            set {
                if ((this.ZoneLimitField.Equals(value) != true)) {
                    this.ZoneLimitField = value;
                    this.RaisePropertyChanged("ZoneLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assets {
            get {
                return this.AssetsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetsField, value) != true)) {
                    this.AssetsField = value;
                    this.RaisePropertyChanged("Assets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagInfo", Namespace="http://schemas.datacontract.org/2004/07/WlocateWeb")]
    [System.SerializableAttribute()]
    public partial class TagInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImeiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Asset {
            get {
                return this.AssetField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetField, value) != true)) {
                    this.AssetField = value;
                    this.RaisePropertyChanged("Asset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageFill {
            get {
                return this.ImageFillField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFillField, value) != true)) {
                    this.ImageFillField = value;
                    this.RaisePropertyChanged("ImageFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imei {
            get {
                return this.ImeiField;
            }
            set {
                if ((object.ReferenceEquals(this.ImeiField, value) != true)) {
                    this.ImeiField = value;
                    this.RaisePropertyChanged("Imei");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FINDOriginal.IWlocate")]
    public interface IWlocate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetMileageReport", ReplyAction="http://tempuri.org/IWlocate/GetMileageReportResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> GetMileageReport(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetMileageReport", ReplyAction="http://tempuri.org/IWlocate/GetMileageReportResponse")]
        System.IAsyncResult BeginGetMileageReport(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> EndGetMileageReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetMixerReport", ReplyAction="http://tempuri.org/IWlocate/GetMixerReportResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> GetMixerReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetMixerReport", ReplyAction="http://tempuri.org/IWlocate/GetMixerReportResponse")]
        System.IAsyncResult BeginGetMixerReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> EndGetMixerReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetPhones", ReplyAction="http://tempuri.org/IWlocate/GetPhonesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> GetPhones(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetPhones", ReplyAction="http://tempuri.org/IWlocate/GetPhonesResponse")]
        System.IAsyncResult BeginGetPhones(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> EndGetPhones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetMessages", ReplyAction="http://tempuri.org/IWlocate/GetMessagesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> GetMessages(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetMessages", ReplyAction="http://tempuri.org/IWlocate/GetMessagesResponse")]
        System.IAsyncResult BeginGetMessages(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> EndGetMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetMessagesEx", ReplyAction="http://tempuri.org/IWlocate/GetMessagesExResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> GetMessagesEx(int iMessageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetMessagesEx", ReplyAction="http://tempuri.org/IWlocate/GetMessagesExResponse")]
        System.IAsyncResult BeginGetMessagesEx(int iMessageID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> EndGetMessagesEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/FlagMessages", ReplyAction="http://tempuri.org/IWlocate/FlagMessagesResponse")]
        string FlagMessages(string strMessageIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/FlagMessages", ReplyAction="http://tempuri.org/IWlocate/FlagMessagesResponse")]
        System.IAsyncResult BeginFlagMessages(string strMessageIds, System.AsyncCallback callback, object asyncState);
        
        string EndFlagMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveMessage", ReplyAction="http://tempuri.org/IWlocate/SaveMessageResponse")]
        string SaveMessage(WlocateWeb.FINDOriginal.MessageInfo udtMessage);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveMessage", ReplyAction="http://tempuri.org/IWlocate/SaveMessageResponse")]
        System.IAsyncResult BeginSaveMessage(WlocateWeb.FINDOriginal.MessageInfo udtMessage, System.AsyncCallback callback, object asyncState);
        
        string EndSaveMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteMessage", ReplyAction="http://tempuri.org/IWlocate/DeleteMessageResponse")]
        string DeleteMessage(int iMessageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteMessage", ReplyAction="http://tempuri.org/IWlocate/DeleteMessageResponse")]
        System.IAsyncResult BeginDeleteMessage(int iMessageID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetRawData", ReplyAction="http://tempuri.org/IWlocate/GetRawDataResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> GetRawData(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetRawData", ReplyAction="http://tempuri.org/IWlocate/GetRawDataResponse")]
        System.IAsyncResult BeginGetRawData(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> EndGetRawData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveRawData", ReplyAction="http://tempuri.org/IWlocate/SaveRawDataResponse")]
        string SaveRawData(WlocateWeb.FINDOriginal.RawData udtData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveRawData", ReplyAction="http://tempuri.org/IWlocate/SaveRawDataResponse")]
        System.IAsyncResult BeginSaveRawData(WlocateWeb.FINDOriginal.RawData udtData, System.AsyncCallback callback, object asyncState);
        
        string EndSaveRawData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/UploadFile", ReplyAction="http://tempuri.org/IWlocate/UploadFileResponse")]
        string UploadFile(WlocateWeb.FINDOriginal.FileUpload udtFile);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/UploadFile", ReplyAction="http://tempuri.org/IWlocate/UploadFileResponse")]
        System.IAsyncResult BeginUploadFile(WlocateWeb.FINDOriginal.FileUpload udtFile, System.AsyncCallback callback, object asyncState);
        
        string EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetFile", ReplyAction="http://tempuri.org/IWlocate/GetFileResponse")]
        string GetFile(string strName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetFile", ReplyAction="http://tempuri.org/IWlocate/GetFileResponse")]
        System.IAsyncResult BeginGetFile(string strName, System.AsyncCallback callback, object asyncState);
        
        string EndGetFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/LocateCellID", ReplyAction="http://tempuri.org/IWlocate/LocateCellIDResponse")]
        string LocateCellID(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/LocateCellID", ReplyAction="http://tempuri.org/IWlocate/LocateCellIDResponse")]
        System.IAsyncResult BeginLocateCellID(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID, System.AsyncCallback callback, object asyncState);
        
        string EndLocateCellID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetCellIds", ReplyAction="http://tempuri.org/IWlocate/GetCellIdsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> GetCellIds(WlocateWeb.FINDOriginal.CellID udtFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetCellIds", ReplyAction="http://tempuri.org/IWlocate/GetCellIdsResponse")]
        System.IAsyncResult BeginGetCellIds(WlocateWeb.FINDOriginal.CellID udtFilter, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> EndGetCellIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetZoneCellIds", ReplyAction="http://tempuri.org/IWlocate/GetZoneCellIdsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> GetZoneCellIds(int iZoneID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetZoneCellIds", ReplyAction="http://tempuri.org/IWlocate/GetZoneCellIdsResponse")]
        System.IAsyncResult BeginGetZoneCellIds(int iZoneID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> EndGetZoneCellIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetCidParams", ReplyAction="http://tempuri.org/IWlocate/GetCidParamsResponse")]
        System.Collections.Generic.List<string> GetCidParams(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetCidParams", ReplyAction="http://tempuri.org/IWlocate/GetCidParamsResponse")]
        System.IAsyncResult BeginGetCidParams(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetCidParams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveCellIds", ReplyAction="http://tempuri.org/IWlocate/SaveCellIdsResponse")]
        string SaveCellIds(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveCellIds", ReplyAction="http://tempuri.org/IWlocate/SaveCellIdsResponse")]
        System.IAsyncResult BeginSaveCellIds(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCellIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetAssetsEx", ReplyAction="http://tempuri.org/IWlocate/GetAssetsExResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssetsEx(int iUserID, int iCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetAssetsEx", ReplyAction="http://tempuri.org/IWlocate/GetAssetsExResponse")]
        System.IAsyncResult BeginGetAssetsEx(int iUserID, int iCompanyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssetsEx(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveAsset", ReplyAction="http://tempuri.org/IWlocate/SaveAssetResponse")]
        string SaveAsset(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveAsset", ReplyAction="http://tempuri.org/IWlocate/SaveAssetResponse")]
        System.IAsyncResult BeginSaveAsset(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndSaveAsset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteAsset", ReplyAction="http://tempuri.org/IWlocate/DeleteAssetResponse")]
        string DeleteAsset(int iAssetID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteAsset", ReplyAction="http://tempuri.org/IWlocate/DeleteAssetResponse")]
        System.IAsyncResult BeginDeleteAsset(int iAssetID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteAsset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetAssetsApi", ReplyAction="http://tempuri.org/IWlocate/GetAssetsApiResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssetsApi(string strKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetAssetsApi", ReplyAction="http://tempuri.org/IWlocate/GetAssetsApiResponse")]
        System.IAsyncResult BeginGetAssetsApi(string strKey, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssetsApi(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/FindAssets", ReplyAction="http://tempuri.org/IWlocate/FindAssetsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> FindAssets(string strPhone, string strName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/FindAssets", ReplyAction="http://tempuri.org/IWlocate/FindAssetsResponse")]
        System.IAsyncResult BeginFindAssets(string strPhone, string strName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndFindAssets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/FindAsset", ReplyAction="http://tempuri.org/IWlocate/FindAssetResponse")]
        WlocateWeb.FINDOriginal.AssetInfo FindAsset(long iPosID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/FindAsset", ReplyAction="http://tempuri.org/IWlocate/FindAssetResponse")]
        System.IAsyncResult BeginFindAsset(long iPosID, System.AsyncCallback callback, object asyncState);
        
        WlocateWeb.FINDOriginal.AssetInfo EndFindAsset(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetActivities", ReplyAction="http://tempuri.org/IWlocate/GetActivitiesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> GetActivities(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetActivities", ReplyAction="http://tempuri.org/IWlocate/GetActivitiesResponse")]
        System.IAsyncResult BeginGetActivities(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> EndGetActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveActivity", ReplyAction="http://tempuri.org/IWlocate/SaveActivityResponse")]
        string SaveActivity(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveActivity", ReplyAction="http://tempuri.org/IWlocate/SaveActivityResponse")]
        System.IAsyncResult BeginSaveActivity(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndSaveActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveActivities", ReplyAction="http://tempuri.org/IWlocate/SaveActivitiesResponse")]
        string SaveActivities(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveActivities", ReplyAction="http://tempuri.org/IWlocate/SaveActivitiesResponse")]
        System.IAsyncResult BeginSaveActivities(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndSaveActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/UpdateActivity", ReplyAction="http://tempuri.org/IWlocate/UpdateActivityResponse")]
        string UpdateActivity(long iActivityID, int iStatusID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/UpdateActivity", ReplyAction="http://tempuri.org/IWlocate/UpdateActivityResponse")]
        System.IAsyncResult BeginUpdateActivity(long iActivityID, int iStatusID, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteActivity", ReplyAction="http://tempuri.org/IWlocate/DeleteActivityResponse")]
        string DeleteActivity(long iActivityID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteActivity", ReplyAction="http://tempuri.org/IWlocate/DeleteActivityResponse")]
        System.IAsyncResult BeginDeleteActivity(long iActivityID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteActivities", ReplyAction="http://tempuri.org/IWlocate/DeleteActivitiesResponse")]
        string DeleteActivities(string strActivityIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteActivities", ReplyAction="http://tempuri.org/IWlocate/DeleteActivitiesResponse")]
        System.IAsyncResult BeginDeleteActivities(string strActivityIds, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetPlans", ReplyAction="http://tempuri.org/IWlocate/GetPlansResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> GetPlans(int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetPlans", ReplyAction="http://tempuri.org/IWlocate/GetPlansResponse")]
        System.IAsyncResult BeginGetPlans(int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> EndGetPlans(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SavePlan", ReplyAction="http://tempuri.org/IWlocate/SavePlanResponse")]
        string SavePlan(WlocateWeb.FINDOriginal.PlanInfo udtPlan);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SavePlan", ReplyAction="http://tempuri.org/IWlocate/SavePlanResponse")]
        System.IAsyncResult BeginSavePlan(WlocateWeb.FINDOriginal.PlanInfo udtPlan, System.AsyncCallback callback, object asyncState);
        
        string EndSavePlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SavePlans", ReplyAction="http://tempuri.org/IWlocate/SavePlansResponse")]
        string SavePlans(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SavePlans", ReplyAction="http://tempuri.org/IWlocate/SavePlansResponse")]
        System.IAsyncResult BeginSavePlans(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans, System.AsyncCallback callback, object asyncState);
        
        string EndSavePlans(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeletePlan", ReplyAction="http://tempuri.org/IWlocate/DeletePlanResponse")]
        string DeletePlan(int iPlanID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeletePlan", ReplyAction="http://tempuri.org/IWlocate/DeletePlanResponse")]
        System.IAsyncResult BeginDeletePlan(int iPlanID, System.AsyncCallback callback, object asyncState);
        
        string EndDeletePlan(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetTrips", ReplyAction="http://tempuri.org/IWlocate/GetTripsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> GetTrips(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetTrips", ReplyAction="http://tempuri.org/IWlocate/GetTripsResponse")]
        System.IAsyncResult BeginGetTrips(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> EndGetTrips(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteTrip", ReplyAction="http://tempuri.org/IWlocate/DeleteTripResponse")]
        string DeleteTrip(long iTripID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteTrip", ReplyAction="http://tempuri.org/IWlocate/DeleteTripResponse")]
        System.IAsyncResult BeginDeleteTrip(long iTripID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteTrip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GenerateTrips", ReplyAction="http://tempuri.org/IWlocate/GenerateTripsResponse")]
        string GenerateTrips(int iCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GenerateTrips", ReplyAction="http://tempuri.org/IWlocate/GenerateTripsResponse")]
        System.IAsyncResult BeginGenerateTrips(int iCompanyID, System.AsyncCallback callback, object asyncState);
        
        string EndGenerateTrips(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetEvents", ReplyAction="http://tempuri.org/IWlocate/GetEventsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> GetEvents(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetEvents", ReplyAction="http://tempuri.org/IWlocate/GetEventsResponse")]
        System.IAsyncResult BeginGetEvents(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> EndGetEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveEvent", ReplyAction="http://tempuri.org/IWlocate/SaveEventResponse")]
        string SaveEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveEvent", ReplyAction="http://tempuri.org/IWlocate/SaveEventResponse")]
        System.IAsyncResult BeginSaveEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, System.AsyncCallback callback, object asyncState);
        
        string EndSaveEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/CancelEvent", ReplyAction="http://tempuri.org/IWlocate/CancelEventResponse")]
        string CancelEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/CancelEvent", ReplyAction="http://tempuri.org/IWlocate/CancelEventResponse")]
        System.IAsyncResult BeginCancelEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag, System.AsyncCallback callback, object asyncState);
        
        string EndCancelEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/FlagEvent", ReplyAction="http://tempuri.org/IWlocate/FlagEventResponse")]
        string FlagEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/FlagEvent", ReplyAction="http://tempuri.org/IWlocate/FlagEventResponse")]
        System.IAsyncResult BeginFlagEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, System.AsyncCallback callback, object asyncState);
        
        string EndFlagEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetPositions", ReplyAction="http://tempuri.org/IWlocate/GetPositionsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> GetPositions(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetPositions", ReplyAction="http://tempuri.org/IWlocate/GetPositionsResponse")]
        System.IAsyncResult BeginGetPositions(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> EndGetPositions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SavePosition", ReplyAction="http://tempuri.org/IWlocate/SavePositionResponse")]
        string SavePosition(WlocateWeb.FINDOriginal.PosInfo udtPos);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SavePosition", ReplyAction="http://tempuri.org/IWlocate/SavePositionResponse")]
        System.IAsyncResult BeginSavePosition(WlocateWeb.FINDOriginal.PosInfo udtPos, System.AsyncCallback callback, object asyncState);
        
        string EndSavePosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetZoneReport", ReplyAction="http://tempuri.org/IWlocate/GetZoneReportResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> GetZoneReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetZoneReport", ReplyAction="http://tempuri.org/IWlocate/GetZoneReportResponse")]
        System.IAsyncResult BeginGetZoneReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> EndGetZoneReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetSpeedReport", ReplyAction="http://tempuri.org/IWlocate/GetSpeedReportResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> GetSpeedReport(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetSpeedReport", ReplyAction="http://tempuri.org/IWlocate/GetSpeedReportResponse")]
        System.IAsyncResult BeginGetSpeedReport(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> EndGetSpeedReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetUtilizeReport", ReplyAction="http://tempuri.org/IWlocate/GetUtilizeReportResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> GetUtilizeReport(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetUtilizeReport", ReplyAction="http://tempuri.org/IWlocate/GetUtilizeReportResponse")]
        System.IAsyncResult BeginGetUtilizeReport(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> EndGetUtilizeReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/CheckLicense", ReplyAction="http://tempuri.org/IWlocate/CheckLicenseResponse")]
        string CheckLicense(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/CheckLicense", ReplyAction="http://tempuri.org/IWlocate/CheckLicenseResponse")]
        System.IAsyncResult BeginCheckLicense(int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndCheckLicense(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetAppKey", ReplyAction="http://tempuri.org/IWlocate/GetAppKeyResponse")]
        string GetAppKey(string strKey);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetAppKey", ReplyAction="http://tempuri.org/IWlocate/GetAppKeyResponse")]
        System.IAsyncResult BeginGetAppKey(string strKey, System.AsyncCallback callback, object asyncState);
        
        string EndGetAppKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetServerTime", ReplyAction="http://tempuri.org/IWlocate/GetServerTimeResponse")]
        System.DateTime GetServerTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetServerTime", ReplyAction="http://tempuri.org/IWlocate/GetServerTimeResponse")]
        System.IAsyncResult BeginGetServerTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetServerTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetFeatures", ReplyAction="http://tempuri.org/IWlocate/GetFeaturesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> GetFeatures();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetFeatures", ReplyAction="http://tempuri.org/IWlocate/GetFeaturesResponse")]
        System.IAsyncResult BeginGetFeatures(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> EndGetFeatures(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetNames", ReplyAction="http://tempuri.org/IWlocate/GetNamesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> GetNames(int iType, int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetNames", ReplyAction="http://tempuri.org/IWlocate/GetNamesResponse")]
        System.IAsyncResult BeginGetNames(int iType, int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> EndGetNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetStrings", ReplyAction="http://tempuri.org/IWlocate/GetStringsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStrings(int iLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetStrings", ReplyAction="http://tempuri.org/IWlocate/GetStringsResponse")]
        System.IAsyncResult BeginGetStrings(int iLanguageID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetStrings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetApiKeys", ReplyAction="http://tempuri.org/IWlocate/GetApiKeysResponse")]
        System.Collections.Generic.Dictionary<string, string> GetApiKeys();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetApiKeys", ReplyAction="http://tempuri.org/IWlocate/GetApiKeysResponse")]
        System.IAsyncResult BeginGetApiKeys(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetApiKeys(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetServerNoticeMessage", ReplyAction="http://tempuri.org/IWlocate/GetServerNoticeMessageResponse")]
        string GetServerNoticeMessage();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetServerNoticeMessage", ReplyAction="http://tempuri.org/IWlocate/GetServerNoticeMessageResponse")]
        System.IAsyncResult BeginGetServerNoticeMessage(System.AsyncCallback callback, object asyncState);
        
        string EndGetServerNoticeMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetCompanies", ReplyAction="http://tempuri.org/IWlocate/GetCompaniesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> GetCompanies(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetCompanies", ReplyAction="http://tempuri.org/IWlocate/GetCompaniesResponse")]
        System.IAsyncResult BeginGetCompanies(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> EndGetCompanies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveCompany", ReplyAction="http://tempuri.org/IWlocate/SaveCompanyResponse")]
        string SaveCompany(WlocateWeb.FINDOriginal.CompanyInfo udtCompany);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveCompany", ReplyAction="http://tempuri.org/IWlocate/SaveCompanyResponse")]
        System.IAsyncResult BeginSaveCompany(WlocateWeb.FINDOriginal.CompanyInfo udtCompany, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteCompany", ReplyAction="http://tempuri.org/IWlocate/DeleteCompanyResponse")]
        string DeleteCompany(int iCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteCompany", ReplyAction="http://tempuri.org/IWlocate/DeleteCompanyResponse")]
        System.IAsyncResult BeginDeleteCompany(int iCompanyID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetUsers", ReplyAction="http://tempuri.org/IWlocate/GetUsersResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> GetUsers(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetUsers", ReplyAction="http://tempuri.org/IWlocate/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveUser", ReplyAction="http://tempuri.org/IWlocate/SaveUserResponse")]
        string SaveUser(WlocateWeb.FINDOriginal.UserInfo udtUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveUser", ReplyAction="http://tempuri.org/IWlocate/SaveUserResponse")]
        System.IAsyncResult BeginSaveUser(WlocateWeb.FINDOriginal.UserInfo udtUser, System.AsyncCallback callback, object asyncState);
        
        string EndSaveUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteUser", ReplyAction="http://tempuri.org/IWlocate/DeleteUserResponse")]
        string DeleteUser(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteUser", ReplyAction="http://tempuri.org/IWlocate/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/LogInUser", ReplyAction="http://tempuri.org/IWlocate/LogInUserResponse")]
        WlocateWeb.FINDOriginal.UserInfo LogInUser(string strUser, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/LogInUser", ReplyAction="http://tempuri.org/IWlocate/LogInUserResponse")]
        System.IAsyncResult BeginLogInUser(string strUser, string strPassword, System.AsyncCallback callback, object asyncState);
        
        WlocateWeb.FINDOriginal.UserInfo EndLogInUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetUser", ReplyAction="http://tempuri.org/IWlocate/GetUserResponse")]
        WlocateWeb.FINDOriginal.UserInfo GetUser(int iUserID, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetUser", ReplyAction="http://tempuri.org/IWlocate/GetUserResponse")]
        System.IAsyncResult BeginGetUser(int iUserID, string strPassword, System.AsyncCallback callback, object asyncState);
        
        WlocateWeb.FINDOriginal.UserInfo EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/UnlockUser", ReplyAction="http://tempuri.org/IWlocate/UnlockUserResponse")]
        string UnlockUser(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/UnlockUser", ReplyAction="http://tempuri.org/IWlocate/UnlockUserResponse")]
        System.IAsyncResult BeginUnlockUser(int iUserID, System.AsyncCallback callback, object asyncState);
        
        string EndUnlockUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/ResetPassword", ReplyAction="http://tempuri.org/IWlocate/ResetPasswordResponse")]
        string ResetPassword(string strUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/ResetPassword", ReplyAction="http://tempuri.org/IWlocate/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(string strUser, System.AsyncCallback callback, object asyncState);
        
        string EndResetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/Geocode", ReplyAction="http://tempuri.org/IWlocate/GeocodeResponse")]
        string Geocode(string strLocation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/Geocode", ReplyAction="http://tempuri.org/IWlocate/GeocodeResponse")]
        System.IAsyncResult BeginGeocode(string strLocation, System.AsyncCallback callback, object asyncState);
        
        string EndGeocode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/ReverseGeocode", ReplyAction="http://tempuri.org/IWlocate/ReverseGeocodeResponse")]
        string ReverseGeocode(double lLatitude, double lLongitude);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/ReverseGeocode", ReplyAction="http://tempuri.org/IWlocate/ReverseGeocodeResponse")]
        System.IAsyncResult BeginReverseGeocode(double lLatitude, double lLongitude, System.AsyncCallback callback, object asyncState);
        
        string EndReverseGeocode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetZones", ReplyAction="http://tempuri.org/IWlocate/GetZonesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> GetZones(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetZones", ReplyAction="http://tempuri.org/IWlocate/GetZonesResponse")]
        System.IAsyncResult BeginGetZones(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> EndGetZones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetActiveZones", ReplyAction="http://tempuri.org/IWlocate/GetActiveZonesResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> GetActiveZones(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetActiveZones", ReplyAction="http://tempuri.org/IWlocate/GetActiveZonesResponse")]
        System.IAsyncResult BeginGetActiveZones(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> EndGetActiveZones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveZone", ReplyAction="http://tempuri.org/IWlocate/SaveZoneResponse")]
        string SaveZone(WlocateWeb.FINDOriginal.ZoneInfo udtZone);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveZone", ReplyAction="http://tempuri.org/IWlocate/SaveZoneResponse")]
        System.IAsyncResult BeginSaveZone(WlocateWeb.FINDOriginal.ZoneInfo udtZone, System.AsyncCallback callback, object asyncState);
        
        string EndSaveZone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteZone", ReplyAction="http://tempuri.org/IWlocate/DeleteZoneResponse")]
        string DeleteZone(int iZoneID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteZone", ReplyAction="http://tempuri.org/IWlocate/DeleteZoneResponse")]
        System.IAsyncResult BeginDeleteZone(int iZoneID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteZone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetTags", ReplyAction="http://tempuri.org/IWlocate/GetTagsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> GetTags(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetTags", ReplyAction="http://tempuri.org/IWlocate/GetTagsResponse")]
        System.IAsyncResult BeginGetTags(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> EndGetTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/SaveTag", ReplyAction="http://tempuri.org/IWlocate/SaveTagResponse")]
        string SaveTag(WlocateWeb.FINDOriginal.TagInfo udtTag);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/SaveTag", ReplyAction="http://tempuri.org/IWlocate/SaveTagResponse")]
        System.IAsyncResult BeginSaveTag(WlocateWeb.FINDOriginal.TagInfo udtTag, System.AsyncCallback callback, object asyncState);
        
        string EndSaveTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/DeleteTag", ReplyAction="http://tempuri.org/IWlocate/DeleteTagResponse")]
        string DeleteTag(int iTagID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/DeleteTag", ReplyAction="http://tempuri.org/IWlocate/DeleteTagResponse")]
        System.IAsyncResult BeginDeleteTag(int iTagID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWlocate/GetAssets", ReplyAction="http://tempuri.org/IWlocate/GetAssetsResponse")]
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssets(int iUserID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWlocate/GetAssets", ReplyAction="http://tempuri.org/IWlocate/GetAssetsResponse")]
        System.IAsyncResult BeginGetAssets(int iUserID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssets(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWlocateChannel : WlocateWeb.FINDOriginal.IWlocate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMileageReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMileageReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMixerReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMixerReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPhonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessagesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessagesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlagMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlagMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRawDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRawDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveRawDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveRawDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocateCellIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LocateCellIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCellIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCellIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZoneCellIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZoneCellIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCidParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCidParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCellIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCellIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssetsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssetsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssetsApiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssetsApiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WlocateWeb.FINDOriginal.AssetInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WlocateWeb.FINDOriginal.AssetInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTripCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTripCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlagEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlagEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPositionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPositionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZoneReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZoneReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpeedReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpeedReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUtilizeReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUtilizeReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAppKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAppKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStringsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStringsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApiKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApiKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerNoticeMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerNoticeMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WlocateWeb.FINDOriginal.UserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WlocateWeb.FINDOriginal.UserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WlocateWeb.FINDOriginal.UserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WlocateWeb.FINDOriginal.UserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlockUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlockUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeocodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GeocodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReverseGeocodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReverseGeocodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WlocateClient : System.ServiceModel.ClientBase<WlocateWeb.FINDOriginal.IWlocate>, WlocateWeb.FINDOriginal.IWlocate {
        
        private BeginOperationDelegate onBeginGetMileageReportDelegate;
        
        private EndOperationDelegate onEndGetMileageReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetMileageReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMixerReportDelegate;
        
        private EndOperationDelegate onEndGetMixerReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetMixerReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhonesDelegate;
        
        private EndOperationDelegate onEndGetPhonesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhonesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessagesDelegate;
        
        private EndOperationDelegate onEndGetMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessagesExDelegate;
        
        private EndOperationDelegate onEndGetMessagesExDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessagesExCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlagMessagesDelegate;
        
        private EndOperationDelegate onEndFlagMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onFlagMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveMessageDelegate;
        
        private EndOperationDelegate onEndSaveMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSaveMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMessageDelegate;
        
        private EndOperationDelegate onEndDeleteMessageDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRawDataDelegate;
        
        private EndOperationDelegate onEndGetRawDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetRawDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveRawDataDelegate;
        
        private EndOperationDelegate onEndSaveRawDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveRawDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileDelegate;
        
        private EndOperationDelegate onEndGetFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginLocateCellIDDelegate;
        
        private EndOperationDelegate onEndLocateCellIDDelegate;
        
        private System.Threading.SendOrPostCallback onLocateCellIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCellIdsDelegate;
        
        private EndOperationDelegate onEndGetCellIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCellIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZoneCellIdsDelegate;
        
        private EndOperationDelegate onEndGetZoneCellIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetZoneCellIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCidParamsDelegate;
        
        private EndOperationDelegate onEndGetCidParamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCidParamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCellIdsDelegate;
        
        private EndOperationDelegate onEndSaveCellIdsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCellIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssetsExDelegate;
        
        private EndOperationDelegate onEndGetAssetsExDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssetsExCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAssetDelegate;
        
        private EndOperationDelegate onEndSaveAssetDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAssetCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAssetDelegate;
        
        private EndOperationDelegate onEndDeleteAssetDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAssetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssetsApiDelegate;
        
        private EndOperationDelegate onEndGetAssetsApiDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssetsApiCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindAssetsDelegate;
        
        private EndOperationDelegate onEndFindAssetsDelegate;
        
        private System.Threading.SendOrPostCallback onFindAssetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindAssetDelegate;
        
        private EndOperationDelegate onEndFindAssetDelegate;
        
        private System.Threading.SendOrPostCallback onFindAssetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActivitiesDelegate;
        
        private EndOperationDelegate onEndGetActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveActivityDelegate;
        
        private EndOperationDelegate onEndSaveActivityDelegate;
        
        private System.Threading.SendOrPostCallback onSaveActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveActivitiesDelegate;
        
        private EndOperationDelegate onEndSaveActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateActivityDelegate;
        
        private EndOperationDelegate onEndUpdateActivityDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteActivityDelegate;
        
        private EndOperationDelegate onEndDeleteActivityDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteActivitiesDelegate;
        
        private EndOperationDelegate onEndDeleteActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlansDelegate;
        
        private EndOperationDelegate onEndGetPlansDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlansCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePlanDelegate;
        
        private EndOperationDelegate onEndSavePlanDelegate;
        
        private System.Threading.SendOrPostCallback onSavePlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePlansDelegate;
        
        private EndOperationDelegate onEndSavePlansDelegate;
        
        private System.Threading.SendOrPostCallback onSavePlansCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePlanDelegate;
        
        private EndOperationDelegate onEndDeletePlanDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTripsDelegate;
        
        private EndOperationDelegate onEndGetTripsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTripsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTripDelegate;
        
        private EndOperationDelegate onEndDeleteTripDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTripCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTripsDelegate;
        
        private EndOperationDelegate onEndGenerateTripsDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTripsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventsDelegate;
        
        private EndOperationDelegate onEndGetEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEventDelegate;
        
        private EndOperationDelegate onEndSaveEventDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelEventDelegate;
        
        private EndOperationDelegate onEndCancelEventDelegate;
        
        private System.Threading.SendOrPostCallback onCancelEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlagEventDelegate;
        
        private EndOperationDelegate onEndFlagEventDelegate;
        
        private System.Threading.SendOrPostCallback onFlagEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPositionsDelegate;
        
        private EndOperationDelegate onEndGetPositionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPositionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePositionDelegate;
        
        private EndOperationDelegate onEndSavePositionDelegate;
        
        private System.Threading.SendOrPostCallback onSavePositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZoneReportDelegate;
        
        private EndOperationDelegate onEndGetZoneReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetZoneReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpeedReportDelegate;
        
        private EndOperationDelegate onEndGetSpeedReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpeedReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUtilizeReportDelegate;
        
        private EndOperationDelegate onEndGetUtilizeReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetUtilizeReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckLicenseDelegate;
        
        private EndOperationDelegate onEndCheckLicenseDelegate;
        
        private System.Threading.SendOrPostCallback onCheckLicenseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAppKeyDelegate;
        
        private EndOperationDelegate onEndGetAppKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAppKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerTimeDelegate;
        
        private EndOperationDelegate onEndGetServerTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFeaturesDelegate;
        
        private EndOperationDelegate onEndGetFeaturesDelegate;
        
        private System.Threading.SendOrPostCallback onGetFeaturesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNamesDelegate;
        
        private EndOperationDelegate onEndGetNamesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStringsDelegate;
        
        private EndOperationDelegate onEndGetStringsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStringsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApiKeysDelegate;
        
        private EndOperationDelegate onEndGetApiKeysDelegate;
        
        private System.Threading.SendOrPostCallback onGetApiKeysCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerNoticeMessageDelegate;
        
        private EndOperationDelegate onEndGetServerNoticeMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerNoticeMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompaniesDelegate;
        
        private EndOperationDelegate onEndGetCompaniesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompaniesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCompanyDelegate;
        
        private EndOperationDelegate onEndSaveCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCompanyDelegate;
        
        private EndOperationDelegate onEndDeleteCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUserDelegate;
        
        private EndOperationDelegate onEndSaveUserDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogInUserDelegate;
        
        private EndOperationDelegate onEndLogInUserDelegate;
        
        private System.Threading.SendOrPostCallback onLogInUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlockUserDelegate;
        
        private EndOperationDelegate onEndUnlockUserDelegate;
        
        private System.Threading.SendOrPostCallback onUnlockUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGeocodeDelegate;
        
        private EndOperationDelegate onEndGeocodeDelegate;
        
        private System.Threading.SendOrPostCallback onGeocodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginReverseGeocodeDelegate;
        
        private EndOperationDelegate onEndReverseGeocodeDelegate;
        
        private System.Threading.SendOrPostCallback onReverseGeocodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZonesDelegate;
        
        private EndOperationDelegate onEndGetZonesDelegate;
        
        private System.Threading.SendOrPostCallback onGetZonesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveZonesDelegate;
        
        private EndOperationDelegate onEndGetActiveZonesDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveZonesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveZoneDelegate;
        
        private EndOperationDelegate onEndSaveZoneDelegate;
        
        private System.Threading.SendOrPostCallback onSaveZoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteZoneDelegate;
        
        private EndOperationDelegate onEndDeleteZoneDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteZoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagsDelegate;
        
        private EndOperationDelegate onEndGetTagsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTagDelegate;
        
        private EndOperationDelegate onEndSaveTagDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTagDelegate;
        
        private EndOperationDelegate onEndDeleteTagDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssetsDelegate;
        
        private EndOperationDelegate onEndGetAssetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssetsCompletedDelegate;
        
        public WlocateClient() {
        }
        
        public WlocateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WlocateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WlocateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WlocateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetMileageReportCompletedEventArgs> GetMileageReportCompleted;
        
        public event System.EventHandler<GetMixerReportCompletedEventArgs> GetMixerReportCompleted;
        
        public event System.EventHandler<GetPhonesCompletedEventArgs> GetPhonesCompleted;
        
        public event System.EventHandler<GetMessagesCompletedEventArgs> GetMessagesCompleted;
        
        public event System.EventHandler<GetMessagesExCompletedEventArgs> GetMessagesExCompleted;
        
        public event System.EventHandler<FlagMessagesCompletedEventArgs> FlagMessagesCompleted;
        
        public event System.EventHandler<SaveMessageCompletedEventArgs> SaveMessageCompleted;
        
        public event System.EventHandler<DeleteMessageCompletedEventArgs> DeleteMessageCompleted;
        
        public event System.EventHandler<GetRawDataCompletedEventArgs> GetRawDataCompleted;
        
        public event System.EventHandler<SaveRawDataCompletedEventArgs> SaveRawDataCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<GetFileCompletedEventArgs> GetFileCompleted;
        
        public event System.EventHandler<LocateCellIDCompletedEventArgs> LocateCellIDCompleted;
        
        public event System.EventHandler<GetCellIdsCompletedEventArgs> GetCellIdsCompleted;
        
        public event System.EventHandler<GetZoneCellIdsCompletedEventArgs> GetZoneCellIdsCompleted;
        
        public event System.EventHandler<GetCidParamsCompletedEventArgs> GetCidParamsCompleted;
        
        public event System.EventHandler<SaveCellIdsCompletedEventArgs> SaveCellIdsCompleted;
        
        public event System.EventHandler<GetAssetsExCompletedEventArgs> GetAssetsExCompleted;
        
        public event System.EventHandler<SaveAssetCompletedEventArgs> SaveAssetCompleted;
        
        public event System.EventHandler<DeleteAssetCompletedEventArgs> DeleteAssetCompleted;
        
        public event System.EventHandler<GetAssetsApiCompletedEventArgs> GetAssetsApiCompleted;
        
        public event System.EventHandler<FindAssetsCompletedEventArgs> FindAssetsCompleted;
        
        public event System.EventHandler<FindAssetCompletedEventArgs> FindAssetCompleted;
        
        public event System.EventHandler<GetActivitiesCompletedEventArgs> GetActivitiesCompleted;
        
        public event System.EventHandler<SaveActivityCompletedEventArgs> SaveActivityCompleted;
        
        public event System.EventHandler<SaveActivitiesCompletedEventArgs> SaveActivitiesCompleted;
        
        public event System.EventHandler<UpdateActivityCompletedEventArgs> UpdateActivityCompleted;
        
        public event System.EventHandler<DeleteActivityCompletedEventArgs> DeleteActivityCompleted;
        
        public event System.EventHandler<DeleteActivitiesCompletedEventArgs> DeleteActivitiesCompleted;
        
        public event System.EventHandler<GetPlansCompletedEventArgs> GetPlansCompleted;
        
        public event System.EventHandler<SavePlanCompletedEventArgs> SavePlanCompleted;
        
        public event System.EventHandler<SavePlansCompletedEventArgs> SavePlansCompleted;
        
        public event System.EventHandler<DeletePlanCompletedEventArgs> DeletePlanCompleted;
        
        public event System.EventHandler<GetTripsCompletedEventArgs> GetTripsCompleted;
        
        public event System.EventHandler<DeleteTripCompletedEventArgs> DeleteTripCompleted;
        
        public event System.EventHandler<GenerateTripsCompletedEventArgs> GenerateTripsCompleted;
        
        public event System.EventHandler<GetEventsCompletedEventArgs> GetEventsCompleted;
        
        public event System.EventHandler<SaveEventCompletedEventArgs> SaveEventCompleted;
        
        public event System.EventHandler<CancelEventCompletedEventArgs> CancelEventCompleted;
        
        public event System.EventHandler<FlagEventCompletedEventArgs> FlagEventCompleted;
        
        public event System.EventHandler<GetPositionsCompletedEventArgs> GetPositionsCompleted;
        
        public event System.EventHandler<SavePositionCompletedEventArgs> SavePositionCompleted;
        
        public event System.EventHandler<GetZoneReportCompletedEventArgs> GetZoneReportCompleted;
        
        public event System.EventHandler<GetSpeedReportCompletedEventArgs> GetSpeedReportCompleted;
        
        public event System.EventHandler<GetUtilizeReportCompletedEventArgs> GetUtilizeReportCompleted;
        
        public event System.EventHandler<CheckLicenseCompletedEventArgs> CheckLicenseCompleted;
        
        public event System.EventHandler<GetAppKeyCompletedEventArgs> GetAppKeyCompleted;
        
        public event System.EventHandler<GetServerTimeCompletedEventArgs> GetServerTimeCompleted;
        
        public event System.EventHandler<GetFeaturesCompletedEventArgs> GetFeaturesCompleted;
        
        public event System.EventHandler<GetNamesCompletedEventArgs> GetNamesCompleted;
        
        public event System.EventHandler<GetStringsCompletedEventArgs> GetStringsCompleted;
        
        public event System.EventHandler<GetApiKeysCompletedEventArgs> GetApiKeysCompleted;
        
        public event System.EventHandler<GetServerNoticeMessageCompletedEventArgs> GetServerNoticeMessageCompleted;
        
        public event System.EventHandler<GetCompaniesCompletedEventArgs> GetCompaniesCompleted;
        
        public event System.EventHandler<SaveCompanyCompletedEventArgs> SaveCompanyCompleted;
        
        public event System.EventHandler<DeleteCompanyCompletedEventArgs> DeleteCompanyCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<SaveUserCompletedEventArgs> SaveUserCompleted;
        
        public event System.EventHandler<DeleteUserCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<LogInUserCompletedEventArgs> LogInUserCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<UnlockUserCompletedEventArgs> UnlockUserCompleted;
        
        public event System.EventHandler<ResetPasswordCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<GeocodeCompletedEventArgs> GeocodeCompleted;
        
        public event System.EventHandler<ReverseGeocodeCompletedEventArgs> ReverseGeocodeCompleted;
        
        public event System.EventHandler<GetZonesCompletedEventArgs> GetZonesCompleted;
        
        public event System.EventHandler<GetActiveZonesCompletedEventArgs> GetActiveZonesCompleted;
        
        public event System.EventHandler<SaveZoneCompletedEventArgs> SaveZoneCompleted;
        
        public event System.EventHandler<DeleteZoneCompletedEventArgs> DeleteZoneCompleted;
        
        public event System.EventHandler<GetTagsCompletedEventArgs> GetTagsCompleted;
        
        public event System.EventHandler<SaveTagCompletedEventArgs> SaveTagCompleted;
        
        public event System.EventHandler<DeleteTagCompletedEventArgs> DeleteTagCompleted;
        
        public event System.EventHandler<GetAssetsCompletedEventArgs> GetAssetsCompleted;
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> GetMileageReport(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany) {
            return base.Channel.GetMileageReport(mileFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMileageReport(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMileageReport(mileFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> EndGetMileageReport(System.IAsyncResult result) {
            return base.Channel.EndGetMileageReport(result);
        }
        
        private System.IAsyncResult OnBeginGetMileageReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.MileageReport mileFilter = ((WlocateWeb.FINDOriginal.MileageReport)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetMileageReport(mileFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetMileageReport(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.MileageReport> retVal = this.EndGetMileageReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMileageReportCompleted(object state) {
            if ((this.GetMileageReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMileageReportCompleted(this, new GetMileageReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMileageReportAsync(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany) {
            this.GetMileageReportAsync(mileFilter, iUserID, strCompany, null);
        }
        
        public void GetMileageReportAsync(WlocateWeb.FINDOriginal.MileageReport mileFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetMileageReportDelegate == null)) {
                this.onBeginGetMileageReportDelegate = new BeginOperationDelegate(this.OnBeginGetMileageReport);
            }
            if ((this.onEndGetMileageReportDelegate == null)) {
                this.onEndGetMileageReportDelegate = new EndOperationDelegate(this.OnEndGetMileageReport);
            }
            if ((this.onGetMileageReportCompletedDelegate == null)) {
                this.onGetMileageReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMileageReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetMileageReportDelegate, new object[] {
                        mileFilter,
                        iUserID,
                        strCompany}, this.onEndGetMileageReportDelegate, this.onGetMileageReportCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> GetMixerReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            return base.Channel.GetMixerReport(evtFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMixerReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMixerReport(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> EndGetMixerReport(System.IAsyncResult result) {
            return base.Channel.EndGetMixerReport(result);
        }
        
        private System.IAsyncResult OnBeginGetMixerReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo evtFilter = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetMixerReport(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetMixerReport(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.MixerReport> retVal = this.EndGetMixerReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMixerReportCompleted(object state) {
            if ((this.GetMixerReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMixerReportCompleted(this, new GetMixerReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMixerReportAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            this.GetMixerReportAsync(evtFilter, iUserID, strCompany, null);
        }
        
        public void GetMixerReportAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetMixerReportDelegate == null)) {
                this.onBeginGetMixerReportDelegate = new BeginOperationDelegate(this.OnBeginGetMixerReport);
            }
            if ((this.onEndGetMixerReportDelegate == null)) {
                this.onEndGetMixerReportDelegate = new EndOperationDelegate(this.OnEndGetMixerReport);
            }
            if ((this.onGetMixerReportCompletedDelegate == null)) {
                this.onGetMixerReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMixerReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetMixerReportDelegate, new object[] {
                        evtFilter,
                        iUserID,
                        strCompany}, this.onEndGetMixerReportDelegate, this.onGetMixerReportCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> GetPhones(int iUserID) {
            return base.Channel.GetPhones(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhones(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhones(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> EndGetPhones(System.IAsyncResult result) {
            return base.Channel.EndGetPhones(result);
        }
        
        private System.IAsyncResult OnBeginGetPhones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetPhones(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetPhones(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.PhoneInfo> retVal = this.EndGetPhones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhonesCompleted(object state) {
            if ((this.GetPhonesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhonesCompleted(this, new GetPhonesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhonesAsync(int iUserID) {
            this.GetPhonesAsync(iUserID, null);
        }
        
        public void GetPhonesAsync(int iUserID, object userState) {
            if ((this.onBeginGetPhonesDelegate == null)) {
                this.onBeginGetPhonesDelegate = new BeginOperationDelegate(this.OnBeginGetPhones);
            }
            if ((this.onEndGetPhonesDelegate == null)) {
                this.onEndGetPhonesDelegate = new EndOperationDelegate(this.OnEndGetPhones);
            }
            if ((this.onGetPhonesCompletedDelegate == null)) {
                this.onGetPhonesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhonesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhonesDelegate, new object[] {
                        iUserID}, this.onEndGetPhonesDelegate, this.onGetPhonesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> GetMessages(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID) {
            return base.Channel.GetMessages(msgFilter, dtStart, dtEnd, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessages(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessages(msgFilter, dtStart, dtEnd, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> EndGetMessages(System.IAsyncResult result) {
            return base.Channel.EndGetMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.MessageInfo msgFilter = ((WlocateWeb.FINDOriginal.MessageInfo)(inValues[0]));
            System.DateTime dtStart = ((System.DateTime)(inValues[1]));
            System.DateTime dtEnd = ((System.DateTime)(inValues[2]));
            int iUserID = ((int)(inValues[3]));
            return this.BeginGetMessages(msgFilter, dtStart, dtEnd, iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetMessages(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> retVal = this.EndGetMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessagesCompleted(object state) {
            if ((this.GetMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessagesAsync(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID) {
            this.GetMessagesAsync(msgFilter, dtStart, dtEnd, iUserID, null);
        }
        
        public void GetMessagesAsync(WlocateWeb.FINDOriginal.MessageInfo msgFilter, System.DateTime dtStart, System.DateTime dtEnd, int iUserID, object userState) {
            if ((this.onBeginGetMessagesDelegate == null)) {
                this.onBeginGetMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetMessages);
            }
            if ((this.onEndGetMessagesDelegate == null)) {
                this.onEndGetMessagesDelegate = new EndOperationDelegate(this.OnEndGetMessages);
            }
            if ((this.onGetMessagesCompletedDelegate == null)) {
                this.onGetMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessagesDelegate, new object[] {
                        msgFilter,
                        dtStart,
                        dtEnd,
                        iUserID}, this.onEndGetMessagesDelegate, this.onGetMessagesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> GetMessagesEx(int iMessageID) {
            return base.Channel.GetMessagesEx(iMessageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessagesEx(int iMessageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessagesEx(iMessageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> EndGetMessagesEx(System.IAsyncResult result) {
            return base.Channel.EndGetMessagesEx(result);
        }
        
        private System.IAsyncResult OnBeginGetMessagesEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iMessageID = ((int)(inValues[0]));
            return this.BeginGetMessagesEx(iMessageID, callback, asyncState);
        }
        
        private object[] OnEndGetMessagesEx(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.MessageInfo> retVal = this.EndGetMessagesEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessagesExCompleted(object state) {
            if ((this.GetMessagesExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessagesExCompleted(this, new GetMessagesExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessagesExAsync(int iMessageID) {
            this.GetMessagesExAsync(iMessageID, null);
        }
        
        public void GetMessagesExAsync(int iMessageID, object userState) {
            if ((this.onBeginGetMessagesExDelegate == null)) {
                this.onBeginGetMessagesExDelegate = new BeginOperationDelegate(this.OnBeginGetMessagesEx);
            }
            if ((this.onEndGetMessagesExDelegate == null)) {
                this.onEndGetMessagesExDelegate = new EndOperationDelegate(this.OnEndGetMessagesEx);
            }
            if ((this.onGetMessagesExCompletedDelegate == null)) {
                this.onGetMessagesExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessagesExCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessagesExDelegate, new object[] {
                        iMessageID}, this.onEndGetMessagesExDelegate, this.onGetMessagesExCompletedDelegate, userState);
        }
        
        public string FlagMessages(string strMessageIds) {
            return base.Channel.FlagMessages(strMessageIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFlagMessages(string strMessageIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlagMessages(strMessageIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndFlagMessages(System.IAsyncResult result) {
            return base.Channel.EndFlagMessages(result);
        }
        
        private System.IAsyncResult OnBeginFlagMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strMessageIds = ((string)(inValues[0]));
            return this.BeginFlagMessages(strMessageIds, callback, asyncState);
        }
        
        private object[] OnEndFlagMessages(System.IAsyncResult result) {
            string retVal = this.EndFlagMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlagMessagesCompleted(object state) {
            if ((this.FlagMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlagMessagesCompleted(this, new FlagMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlagMessagesAsync(string strMessageIds) {
            this.FlagMessagesAsync(strMessageIds, null);
        }
        
        public void FlagMessagesAsync(string strMessageIds, object userState) {
            if ((this.onBeginFlagMessagesDelegate == null)) {
                this.onBeginFlagMessagesDelegate = new BeginOperationDelegate(this.OnBeginFlagMessages);
            }
            if ((this.onEndFlagMessagesDelegate == null)) {
                this.onEndFlagMessagesDelegate = new EndOperationDelegate(this.OnEndFlagMessages);
            }
            if ((this.onFlagMessagesCompletedDelegate == null)) {
                this.onFlagMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlagMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginFlagMessagesDelegate, new object[] {
                        strMessageIds}, this.onEndFlagMessagesDelegate, this.onFlagMessagesCompletedDelegate, userState);
        }
        
        public string SaveMessage(WlocateWeb.FINDOriginal.MessageInfo udtMessage) {
            return base.Channel.SaveMessage(udtMessage);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveMessage(WlocateWeb.FINDOriginal.MessageInfo udtMessage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveMessage(udtMessage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveMessage(System.IAsyncResult result) {
            return base.Channel.EndSaveMessage(result);
        }
        
        private System.IAsyncResult OnBeginSaveMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.MessageInfo udtMessage = ((WlocateWeb.FINDOriginal.MessageInfo)(inValues[0]));
            return this.BeginSaveMessage(udtMessage, callback, asyncState);
        }
        
        private object[] OnEndSaveMessage(System.IAsyncResult result) {
            string retVal = this.EndSaveMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveMessageCompleted(object state) {
            if ((this.SaveMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveMessageCompleted(this, new SaveMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveMessageAsync(WlocateWeb.FINDOriginal.MessageInfo udtMessage) {
            this.SaveMessageAsync(udtMessage, null);
        }
        
        public void SaveMessageAsync(WlocateWeb.FINDOriginal.MessageInfo udtMessage, object userState) {
            if ((this.onBeginSaveMessageDelegate == null)) {
                this.onBeginSaveMessageDelegate = new BeginOperationDelegate(this.OnBeginSaveMessage);
            }
            if ((this.onEndSaveMessageDelegate == null)) {
                this.onEndSaveMessageDelegate = new EndOperationDelegate(this.OnEndSaveMessage);
            }
            if ((this.onSaveMessageCompletedDelegate == null)) {
                this.onSaveMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSaveMessageDelegate, new object[] {
                        udtMessage}, this.onEndSaveMessageDelegate, this.onSaveMessageCompletedDelegate, userState);
        }
        
        public string DeleteMessage(int iMessageID) {
            return base.Channel.DeleteMessage(iMessageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMessage(int iMessageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMessage(iMessageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteMessage(System.IAsyncResult result) {
            return base.Channel.EndDeleteMessage(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iMessageID = ((int)(inValues[0]));
            return this.BeginDeleteMessage(iMessageID, callback, asyncState);
        }
        
        private object[] OnEndDeleteMessage(System.IAsyncResult result) {
            string retVal = this.EndDeleteMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteMessageCompleted(object state) {
            if ((this.DeleteMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMessageCompleted(this, new DeleteMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMessageAsync(int iMessageID) {
            this.DeleteMessageAsync(iMessageID, null);
        }
        
        public void DeleteMessageAsync(int iMessageID, object userState) {
            if ((this.onBeginDeleteMessageDelegate == null)) {
                this.onBeginDeleteMessageDelegate = new BeginOperationDelegate(this.OnBeginDeleteMessage);
            }
            if ((this.onEndDeleteMessageDelegate == null)) {
                this.onEndDeleteMessageDelegate = new EndOperationDelegate(this.OnEndDeleteMessage);
            }
            if ((this.onDeleteMessageCompletedDelegate == null)) {
                this.onDeleteMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMessageCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMessageDelegate, new object[] {
                        iMessageID}, this.onEndDeleteMessageDelegate, this.onDeleteMessageCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> GetRawData(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID) {
            return base.Channel.GetRawData(datFilter, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRawData(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRawData(datFilter, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> EndGetRawData(System.IAsyncResult result) {
            return base.Channel.EndGetRawData(result);
        }
        
        private System.IAsyncResult OnBeginGetRawData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.RawData datFilter = ((WlocateWeb.FINDOriginal.RawData)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            return this.BeginGetRawData(datFilter, iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetRawData(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.RawData> retVal = this.EndGetRawData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRawDataCompleted(object state) {
            if ((this.GetRawDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRawDataCompleted(this, new GetRawDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRawDataAsync(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID) {
            this.GetRawDataAsync(datFilter, iUserID, null);
        }
        
        public void GetRawDataAsync(WlocateWeb.FINDOriginal.RawData datFilter, int iUserID, object userState) {
            if ((this.onBeginGetRawDataDelegate == null)) {
                this.onBeginGetRawDataDelegate = new BeginOperationDelegate(this.OnBeginGetRawData);
            }
            if ((this.onEndGetRawDataDelegate == null)) {
                this.onEndGetRawDataDelegate = new EndOperationDelegate(this.OnEndGetRawData);
            }
            if ((this.onGetRawDataCompletedDelegate == null)) {
                this.onGetRawDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRawDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRawDataDelegate, new object[] {
                        datFilter,
                        iUserID}, this.onEndGetRawDataDelegate, this.onGetRawDataCompletedDelegate, userState);
        }
        
        public string SaveRawData(WlocateWeb.FINDOriginal.RawData udtData) {
            return base.Channel.SaveRawData(udtData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveRawData(WlocateWeb.FINDOriginal.RawData udtData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveRawData(udtData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveRawData(System.IAsyncResult result) {
            return base.Channel.EndSaveRawData(result);
        }
        
        private System.IAsyncResult OnBeginSaveRawData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.RawData udtData = ((WlocateWeb.FINDOriginal.RawData)(inValues[0]));
            return this.BeginSaveRawData(udtData, callback, asyncState);
        }
        
        private object[] OnEndSaveRawData(System.IAsyncResult result) {
            string retVal = this.EndSaveRawData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveRawDataCompleted(object state) {
            if ((this.SaveRawDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveRawDataCompleted(this, new SaveRawDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveRawDataAsync(WlocateWeb.FINDOriginal.RawData udtData) {
            this.SaveRawDataAsync(udtData, null);
        }
        
        public void SaveRawDataAsync(WlocateWeb.FINDOriginal.RawData udtData, object userState) {
            if ((this.onBeginSaveRawDataDelegate == null)) {
                this.onBeginSaveRawDataDelegate = new BeginOperationDelegate(this.OnBeginSaveRawData);
            }
            if ((this.onEndSaveRawDataDelegate == null)) {
                this.onEndSaveRawDataDelegate = new EndOperationDelegate(this.OnEndSaveRawData);
            }
            if ((this.onSaveRawDataCompletedDelegate == null)) {
                this.onSaveRawDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveRawDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveRawDataDelegate, new object[] {
                        udtData}, this.onEndSaveRawDataDelegate, this.onSaveRawDataCompletedDelegate, userState);
        }
        
        public string UploadFile(WlocateWeb.FINDOriginal.FileUpload udtFile) {
            return base.Channel.UploadFile(udtFile);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadFile(WlocateWeb.FINDOriginal.FileUpload udtFile, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(udtFile, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.FileUpload udtFile = ((WlocateWeb.FINDOriginal.FileUpload)(inValues[0]));
            return this.BeginUploadFile(udtFile, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            string retVal = this.EndUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(WlocateWeb.FINDOriginal.FileUpload udtFile) {
            this.UploadFileAsync(udtFile, null);
        }
        
        public void UploadFileAsync(WlocateWeb.FINDOriginal.FileUpload udtFile, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        udtFile}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        public string GetFile(string strName) {
            return base.Channel.GetFile(strName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFile(string strName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFile(strName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetFile(System.IAsyncResult result) {
            return base.Channel.EndGetFile(result);
        }
        
        private System.IAsyncResult OnBeginGetFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strName = ((string)(inValues[0]));
            return this.BeginGetFile(strName, callback, asyncState);
        }
        
        private object[] OnEndGetFile(System.IAsyncResult result) {
            string retVal = this.EndGetFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileCompleted(object state) {
            if ((this.GetFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileAsync(string strName) {
            this.GetFileAsync(strName, null);
        }
        
        public void GetFileAsync(string strName, object userState) {
            if ((this.onBeginGetFileDelegate == null)) {
                this.onBeginGetFileDelegate = new BeginOperationDelegate(this.OnBeginGetFile);
            }
            if ((this.onEndGetFileDelegate == null)) {
                this.onEndGetFileDelegate = new EndOperationDelegate(this.OnEndGetFile);
            }
            if ((this.onGetFileCompletedDelegate == null)) {
                this.onGetFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileDelegate, new object[] {
                        strName}, this.onEndGetFileDelegate, this.onGetFileCompletedDelegate, userState);
        }
        
        public string LocateCellID(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID) {
            return base.Channel.LocateCellID(udtEvent, udtCellID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLocateCellID(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLocateCellID(udtEvent, udtCellID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLocateCellID(System.IAsyncResult result) {
            return base.Channel.EndLocateCellID(result);
        }
        
        private System.IAsyncResult OnBeginLocateCellID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo udtEvent = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            WlocateWeb.FINDOriginal.CellID udtCellID = ((WlocateWeb.FINDOriginal.CellID)(inValues[1]));
            return this.BeginLocateCellID(udtEvent, udtCellID, callback, asyncState);
        }
        
        private object[] OnEndLocateCellID(System.IAsyncResult result) {
            string retVal = this.EndLocateCellID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLocateCellIDCompleted(object state) {
            if ((this.LocateCellIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LocateCellIDCompleted(this, new LocateCellIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LocateCellIDAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID) {
            this.LocateCellIDAsync(udtEvent, udtCellID, null);
        }
        
        public void LocateCellIDAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, WlocateWeb.FINDOriginal.CellID udtCellID, object userState) {
            if ((this.onBeginLocateCellIDDelegate == null)) {
                this.onBeginLocateCellIDDelegate = new BeginOperationDelegate(this.OnBeginLocateCellID);
            }
            if ((this.onEndLocateCellIDDelegate == null)) {
                this.onEndLocateCellIDDelegate = new EndOperationDelegate(this.OnEndLocateCellID);
            }
            if ((this.onLocateCellIDCompletedDelegate == null)) {
                this.onLocateCellIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLocateCellIDCompleted);
            }
            base.InvokeAsync(this.onBeginLocateCellIDDelegate, new object[] {
                        udtEvent,
                        udtCellID}, this.onEndLocateCellIDDelegate, this.onLocateCellIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> GetCellIds(WlocateWeb.FINDOriginal.CellID udtFilter) {
            return base.Channel.GetCellIds(udtFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCellIds(WlocateWeb.FINDOriginal.CellID udtFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCellIds(udtFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> EndGetCellIds(System.IAsyncResult result) {
            return base.Channel.EndGetCellIds(result);
        }
        
        private System.IAsyncResult OnBeginGetCellIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.CellID udtFilter = ((WlocateWeb.FINDOriginal.CellID)(inValues[0]));
            return this.BeginGetCellIds(udtFilter, callback, asyncState);
        }
        
        private object[] OnEndGetCellIds(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> retVal = this.EndGetCellIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCellIdsCompleted(object state) {
            if ((this.GetCellIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCellIdsCompleted(this, new GetCellIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCellIdsAsync(WlocateWeb.FINDOriginal.CellID udtFilter) {
            this.GetCellIdsAsync(udtFilter, null);
        }
        
        public void GetCellIdsAsync(WlocateWeb.FINDOriginal.CellID udtFilter, object userState) {
            if ((this.onBeginGetCellIdsDelegate == null)) {
                this.onBeginGetCellIdsDelegate = new BeginOperationDelegate(this.OnBeginGetCellIds);
            }
            if ((this.onEndGetCellIdsDelegate == null)) {
                this.onEndGetCellIdsDelegate = new EndOperationDelegate(this.OnEndGetCellIds);
            }
            if ((this.onGetCellIdsCompletedDelegate == null)) {
                this.onGetCellIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCellIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCellIdsDelegate, new object[] {
                        udtFilter}, this.onEndGetCellIdsDelegate, this.onGetCellIdsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> GetZoneCellIds(int iZoneID) {
            return base.Channel.GetZoneCellIds(iZoneID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZoneCellIds(int iZoneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZoneCellIds(iZoneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> EndGetZoneCellIds(System.IAsyncResult result) {
            return base.Channel.EndGetZoneCellIds(result);
        }
        
        private System.IAsyncResult OnBeginGetZoneCellIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iZoneID = ((int)(inValues[0]));
            return this.BeginGetZoneCellIds(iZoneID, callback, asyncState);
        }
        
        private object[] OnEndGetZoneCellIds(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> retVal = this.EndGetZoneCellIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZoneCellIdsCompleted(object state) {
            if ((this.GetZoneCellIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZoneCellIdsCompleted(this, new GetZoneCellIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZoneCellIdsAsync(int iZoneID) {
            this.GetZoneCellIdsAsync(iZoneID, null);
        }
        
        public void GetZoneCellIdsAsync(int iZoneID, object userState) {
            if ((this.onBeginGetZoneCellIdsDelegate == null)) {
                this.onBeginGetZoneCellIdsDelegate = new BeginOperationDelegate(this.OnBeginGetZoneCellIds);
            }
            if ((this.onEndGetZoneCellIdsDelegate == null)) {
                this.onEndGetZoneCellIdsDelegate = new EndOperationDelegate(this.OnEndGetZoneCellIds);
            }
            if ((this.onGetZoneCellIdsCompletedDelegate == null)) {
                this.onGetZoneCellIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZoneCellIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetZoneCellIdsDelegate, new object[] {
                        iZoneID}, this.onEndGetZoneCellIdsDelegate, this.onGetZoneCellIdsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetCidParams(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter) {
            return base.Channel.GetCidParams(strParam, udtFilter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCidParams(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCidParams(strParam, udtFilter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetCidParams(System.IAsyncResult result) {
            return base.Channel.EndGetCidParams(result);
        }
        
        private System.IAsyncResult OnBeginGetCidParams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strParam = ((string)(inValues[0]));
            WlocateWeb.FINDOriginal.CellID udtFilter = ((WlocateWeb.FINDOriginal.CellID)(inValues[1]));
            return this.BeginGetCidParams(strParam, udtFilter, callback, asyncState);
        }
        
        private object[] OnEndGetCidParams(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetCidParams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCidParamsCompleted(object state) {
            if ((this.GetCidParamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCidParamsCompleted(this, new GetCidParamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCidParamsAsync(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter) {
            this.GetCidParamsAsync(strParam, udtFilter, null);
        }
        
        public void GetCidParamsAsync(string strParam, WlocateWeb.FINDOriginal.CellID udtFilter, object userState) {
            if ((this.onBeginGetCidParamsDelegate == null)) {
                this.onBeginGetCidParamsDelegate = new BeginOperationDelegate(this.OnBeginGetCidParams);
            }
            if ((this.onEndGetCidParamsDelegate == null)) {
                this.onEndGetCidParamsDelegate = new EndOperationDelegate(this.OnEndGetCidParams);
            }
            if ((this.onGetCidParamsCompletedDelegate == null)) {
                this.onGetCidParamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCidParamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCidParamsDelegate, new object[] {
                        strParam,
                        udtFilter}, this.onEndGetCidParamsDelegate, this.onGetCidParamsCompletedDelegate, userState);
        }
        
        public string SaveCellIds(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds) {
            return base.Channel.SaveCellIds(arrCellIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCellIds(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCellIds(arrCellIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveCellIds(System.IAsyncResult result) {
            return base.Channel.EndSaveCellIds(result);
        }
        
        private System.IAsyncResult OnBeginSaveCellIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds = ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID>)(inValues[0]));
            return this.BeginSaveCellIds(arrCellIds, callback, asyncState);
        }
        
        private object[] OnEndSaveCellIds(System.IAsyncResult result) {
            string retVal = this.EndSaveCellIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCellIdsCompleted(object state) {
            if ((this.SaveCellIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCellIdsCompleted(this, new SaveCellIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCellIdsAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds) {
            this.SaveCellIdsAsync(arrCellIds, null);
        }
        
        public void SaveCellIdsAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.CellID> arrCellIds, object userState) {
            if ((this.onBeginSaveCellIdsDelegate == null)) {
                this.onBeginSaveCellIdsDelegate = new BeginOperationDelegate(this.OnBeginSaveCellIds);
            }
            if ((this.onEndSaveCellIdsDelegate == null)) {
                this.onEndSaveCellIdsDelegate = new EndOperationDelegate(this.OnEndSaveCellIds);
            }
            if ((this.onSaveCellIdsCompletedDelegate == null)) {
                this.onSaveCellIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCellIdsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCellIdsDelegate, new object[] {
                        arrCellIds}, this.onEndSaveCellIdsDelegate, this.onSaveCellIdsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssetsEx(int iUserID, int iCompanyID) {
            return base.Channel.GetAssetsEx(iUserID, iCompanyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssetsEx(int iUserID, int iCompanyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssetsEx(iUserID, iCompanyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssetsEx(System.IAsyncResult result) {
            return base.Channel.EndGetAssetsEx(result);
        }
        
        private System.IAsyncResult OnBeginGetAssetsEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            int iCompanyID = ((int)(inValues[1]));
            return this.BeginGetAssetsEx(iUserID, iCompanyID, callback, asyncState);
        }
        
        private object[] OnEndGetAssetsEx(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> retVal = this.EndGetAssetsEx(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssetsExCompleted(object state) {
            if ((this.GetAssetsExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssetsExCompleted(this, new GetAssetsExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssetsExAsync(int iUserID, int iCompanyID) {
            this.GetAssetsExAsync(iUserID, iCompanyID, null);
        }
        
        public void GetAssetsExAsync(int iUserID, int iCompanyID, object userState) {
            if ((this.onBeginGetAssetsExDelegate == null)) {
                this.onBeginGetAssetsExDelegate = new BeginOperationDelegate(this.OnBeginGetAssetsEx);
            }
            if ((this.onEndGetAssetsExDelegate == null)) {
                this.onEndGetAssetsExDelegate = new EndOperationDelegate(this.OnEndGetAssetsEx);
            }
            if ((this.onGetAssetsExCompletedDelegate == null)) {
                this.onGetAssetsExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssetsExCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssetsExDelegate, new object[] {
                        iUserID,
                        iCompanyID}, this.onEndGetAssetsExDelegate, this.onGetAssetsExCompletedDelegate, userState);
        }
        
        public string SaveAsset(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID) {
            return base.Channel.SaveAsset(udtAsset, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveAsset(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAsset(udtAsset, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveAsset(System.IAsyncResult result) {
            return base.Channel.EndSaveAsset(result);
        }
        
        private System.IAsyncResult OnBeginSaveAsset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.AssetInfo udtAsset = ((WlocateWeb.FINDOriginal.AssetInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            return this.BeginSaveAsset(udtAsset, iUserID, callback, asyncState);
        }
        
        private object[] OnEndSaveAsset(System.IAsyncResult result) {
            string retVal = this.EndSaveAsset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveAssetCompleted(object state) {
            if ((this.SaveAssetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAssetCompleted(this, new SaveAssetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAssetAsync(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID) {
            this.SaveAssetAsync(udtAsset, iUserID, null);
        }
        
        public void SaveAssetAsync(WlocateWeb.FINDOriginal.AssetInfo udtAsset, int iUserID, object userState) {
            if ((this.onBeginSaveAssetDelegate == null)) {
                this.onBeginSaveAssetDelegate = new BeginOperationDelegate(this.OnBeginSaveAsset);
            }
            if ((this.onEndSaveAssetDelegate == null)) {
                this.onEndSaveAssetDelegate = new EndOperationDelegate(this.OnEndSaveAsset);
            }
            if ((this.onSaveAssetCompletedDelegate == null)) {
                this.onSaveAssetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAssetCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAssetDelegate, new object[] {
                        udtAsset,
                        iUserID}, this.onEndSaveAssetDelegate, this.onSaveAssetCompletedDelegate, userState);
        }
        
        public string DeleteAsset(int iAssetID) {
            return base.Channel.DeleteAsset(iAssetID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAsset(int iAssetID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAsset(iAssetID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteAsset(System.IAsyncResult result) {
            return base.Channel.EndDeleteAsset(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAsset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iAssetID = ((int)(inValues[0]));
            return this.BeginDeleteAsset(iAssetID, callback, asyncState);
        }
        
        private object[] OnEndDeleteAsset(System.IAsyncResult result) {
            string retVal = this.EndDeleteAsset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAssetCompleted(object state) {
            if ((this.DeleteAssetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAssetCompleted(this, new DeleteAssetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAssetAsync(int iAssetID) {
            this.DeleteAssetAsync(iAssetID, null);
        }
        
        public void DeleteAssetAsync(int iAssetID, object userState) {
            if ((this.onBeginDeleteAssetDelegate == null)) {
                this.onBeginDeleteAssetDelegate = new BeginOperationDelegate(this.OnBeginDeleteAsset);
            }
            if ((this.onEndDeleteAssetDelegate == null)) {
                this.onEndDeleteAssetDelegate = new EndOperationDelegate(this.OnEndDeleteAsset);
            }
            if ((this.onDeleteAssetCompletedDelegate == null)) {
                this.onDeleteAssetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAssetCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAssetDelegate, new object[] {
                        iAssetID}, this.onEndDeleteAssetDelegate, this.onDeleteAssetCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssetsApi(string strKey) {
            return base.Channel.GetAssetsApi(strKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssetsApi(string strKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssetsApi(strKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssetsApi(System.IAsyncResult result) {
            return base.Channel.EndGetAssetsApi(result);
        }
        
        private System.IAsyncResult OnBeginGetAssetsApi(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strKey = ((string)(inValues[0]));
            return this.BeginGetAssetsApi(strKey, callback, asyncState);
        }
        
        private object[] OnEndGetAssetsApi(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> retVal = this.EndGetAssetsApi(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssetsApiCompleted(object state) {
            if ((this.GetAssetsApiCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssetsApiCompleted(this, new GetAssetsApiCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssetsApiAsync(string strKey) {
            this.GetAssetsApiAsync(strKey, null);
        }
        
        public void GetAssetsApiAsync(string strKey, object userState) {
            if ((this.onBeginGetAssetsApiDelegate == null)) {
                this.onBeginGetAssetsApiDelegate = new BeginOperationDelegate(this.OnBeginGetAssetsApi);
            }
            if ((this.onEndGetAssetsApiDelegate == null)) {
                this.onEndGetAssetsApiDelegate = new EndOperationDelegate(this.OnEndGetAssetsApi);
            }
            if ((this.onGetAssetsApiCompletedDelegate == null)) {
                this.onGetAssetsApiCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssetsApiCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssetsApiDelegate, new object[] {
                        strKey}, this.onEndGetAssetsApiDelegate, this.onGetAssetsApiCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> FindAssets(string strPhone, string strName) {
            return base.Channel.FindAssets(strPhone, strName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindAssets(string strPhone, string strName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindAssets(strPhone, strName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndFindAssets(System.IAsyncResult result) {
            return base.Channel.EndFindAssets(result);
        }
        
        private System.IAsyncResult OnBeginFindAssets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strPhone = ((string)(inValues[0]));
            string strName = ((string)(inValues[1]));
            return this.BeginFindAssets(strPhone, strName, callback, asyncState);
        }
        
        private object[] OnEndFindAssets(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> retVal = this.EndFindAssets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindAssetsCompleted(object state) {
            if ((this.FindAssetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindAssetsCompleted(this, new FindAssetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindAssetsAsync(string strPhone, string strName) {
            this.FindAssetsAsync(strPhone, strName, null);
        }
        
        public void FindAssetsAsync(string strPhone, string strName, object userState) {
            if ((this.onBeginFindAssetsDelegate == null)) {
                this.onBeginFindAssetsDelegate = new BeginOperationDelegate(this.OnBeginFindAssets);
            }
            if ((this.onEndFindAssetsDelegate == null)) {
                this.onEndFindAssetsDelegate = new EndOperationDelegate(this.OnEndFindAssets);
            }
            if ((this.onFindAssetsCompletedDelegate == null)) {
                this.onFindAssetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindAssetsCompleted);
            }
            base.InvokeAsync(this.onBeginFindAssetsDelegate, new object[] {
                        strPhone,
                        strName}, this.onEndFindAssetsDelegate, this.onFindAssetsCompletedDelegate, userState);
        }
        
        public WlocateWeb.FINDOriginal.AssetInfo FindAsset(long iPosID) {
            return base.Channel.FindAsset(iPosID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindAsset(long iPosID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindAsset(iPosID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WlocateWeb.FINDOriginal.AssetInfo EndFindAsset(System.IAsyncResult result) {
            return base.Channel.EndFindAsset(result);
        }
        
        private System.IAsyncResult OnBeginFindAsset(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long iPosID = ((long)(inValues[0]));
            return this.BeginFindAsset(iPosID, callback, asyncState);
        }
        
        private object[] OnEndFindAsset(System.IAsyncResult result) {
            WlocateWeb.FINDOriginal.AssetInfo retVal = this.EndFindAsset(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindAssetCompleted(object state) {
            if ((this.FindAssetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindAssetCompleted(this, new FindAssetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindAssetAsync(long iPosID) {
            this.FindAssetAsync(iPosID, null);
        }
        
        public void FindAssetAsync(long iPosID, object userState) {
            if ((this.onBeginFindAssetDelegate == null)) {
                this.onBeginFindAssetDelegate = new BeginOperationDelegate(this.OnBeginFindAsset);
            }
            if ((this.onEndFindAssetDelegate == null)) {
                this.onEndFindAssetDelegate = new EndOperationDelegate(this.OnEndFindAsset);
            }
            if ((this.onFindAssetCompletedDelegate == null)) {
                this.onFindAssetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindAssetCompleted);
            }
            base.InvokeAsync(this.onBeginFindAssetDelegate, new object[] {
                        iPosID}, this.onEndFindAssetDelegate, this.onFindAssetCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> GetActivities(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany) {
            return base.Channel.GetActivities(actFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActivities(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActivities(actFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> EndGetActivities(System.IAsyncResult result) {
            return base.Channel.EndGetActivities(result);
        }
        
        private System.IAsyncResult OnBeginGetActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.ActivityInfo actFilter = ((WlocateWeb.FINDOriginal.ActivityInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetActivities(actFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetActivities(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> retVal = this.EndGetActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActivitiesCompleted(object state) {
            if ((this.GetActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActivitiesCompleted(this, new GetActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActivitiesAsync(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany) {
            this.GetActivitiesAsync(actFilter, iUserID, strCompany, null);
        }
        
        public void GetActivitiesAsync(WlocateWeb.FINDOriginal.ActivityInfo actFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetActivitiesDelegate == null)) {
                this.onBeginGetActivitiesDelegate = new BeginOperationDelegate(this.OnBeginGetActivities);
            }
            if ((this.onEndGetActivitiesDelegate == null)) {
                this.onEndGetActivitiesDelegate = new EndOperationDelegate(this.OnEndGetActivities);
            }
            if ((this.onGetActivitiesCompletedDelegate == null)) {
                this.onGetActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetActivitiesDelegate, new object[] {
                        actFilter,
                        iUserID,
                        strCompany}, this.onEndGetActivitiesDelegate, this.onGetActivitiesCompletedDelegate, userState);
        }
        
        public string SaveActivity(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID) {
            return base.Channel.SaveActivity(udtActivity, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveActivity(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveActivity(udtActivity, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveActivity(System.IAsyncResult result) {
            return base.Channel.EndSaveActivity(result);
        }
        
        private System.IAsyncResult OnBeginSaveActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.ActivityInfo udtActivity = ((WlocateWeb.FINDOriginal.ActivityInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            return this.BeginSaveActivity(udtActivity, iUserID, callback, asyncState);
        }
        
        private object[] OnEndSaveActivity(System.IAsyncResult result) {
            string retVal = this.EndSaveActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveActivityCompleted(object state) {
            if ((this.SaveActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveActivityCompleted(this, new SaveActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveActivityAsync(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID) {
            this.SaveActivityAsync(udtActivity, iUserID, null);
        }
        
        public void SaveActivityAsync(WlocateWeb.FINDOriginal.ActivityInfo udtActivity, int iUserID, object userState) {
            if ((this.onBeginSaveActivityDelegate == null)) {
                this.onBeginSaveActivityDelegate = new BeginOperationDelegate(this.OnBeginSaveActivity);
            }
            if ((this.onEndSaveActivityDelegate == null)) {
                this.onEndSaveActivityDelegate = new EndOperationDelegate(this.OnEndSaveActivity);
            }
            if ((this.onSaveActivityCompletedDelegate == null)) {
                this.onSaveActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveActivityCompleted);
            }
            base.InvokeAsync(this.onBeginSaveActivityDelegate, new object[] {
                        udtActivity,
                        iUserID}, this.onEndSaveActivityDelegate, this.onSaveActivityCompletedDelegate, userState);
        }
        
        public string SaveActivities(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID) {
            return base.Channel.SaveActivities(arrActivities, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveActivities(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveActivities(arrActivities, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveActivities(System.IAsyncResult result) {
            return base.Channel.EndSaveActivities(result);
        }
        
        private System.IAsyncResult OnBeginSaveActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities = ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo>)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            return this.BeginSaveActivities(arrActivities, iUserID, callback, asyncState);
        }
        
        private object[] OnEndSaveActivities(System.IAsyncResult result) {
            string retVal = this.EndSaveActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveActivitiesCompleted(object state) {
            if ((this.SaveActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveActivitiesCompleted(this, new SaveActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveActivitiesAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID) {
            this.SaveActivitiesAsync(arrActivities, iUserID, null);
        }
        
        public void SaveActivitiesAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.ActivityInfo> arrActivities, int iUserID, object userState) {
            if ((this.onBeginSaveActivitiesDelegate == null)) {
                this.onBeginSaveActivitiesDelegate = new BeginOperationDelegate(this.OnBeginSaveActivities);
            }
            if ((this.onEndSaveActivitiesDelegate == null)) {
                this.onEndSaveActivitiesDelegate = new EndOperationDelegate(this.OnEndSaveActivities);
            }
            if ((this.onSaveActivitiesCompletedDelegate == null)) {
                this.onSaveActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveActivitiesDelegate, new object[] {
                        arrActivities,
                        iUserID}, this.onEndSaveActivitiesDelegate, this.onSaveActivitiesCompletedDelegate, userState);
        }
        
        public string UpdateActivity(long iActivityID, int iStatusID) {
            return base.Channel.UpdateActivity(iActivityID, iStatusID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateActivity(long iActivityID, int iStatusID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateActivity(iActivityID, iStatusID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUpdateActivity(System.IAsyncResult result) {
            return base.Channel.EndUpdateActivity(result);
        }
        
        private System.IAsyncResult OnBeginUpdateActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long iActivityID = ((long)(inValues[0]));
            int iStatusID = ((int)(inValues[1]));
            return this.BeginUpdateActivity(iActivityID, iStatusID, callback, asyncState);
        }
        
        private object[] OnEndUpdateActivity(System.IAsyncResult result) {
            string retVal = this.EndUpdateActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateActivityCompleted(object state) {
            if ((this.UpdateActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateActivityCompleted(this, new UpdateActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateActivityAsync(long iActivityID, int iStatusID) {
            this.UpdateActivityAsync(iActivityID, iStatusID, null);
        }
        
        public void UpdateActivityAsync(long iActivityID, int iStatusID, object userState) {
            if ((this.onBeginUpdateActivityDelegate == null)) {
                this.onBeginUpdateActivityDelegate = new BeginOperationDelegate(this.OnBeginUpdateActivity);
            }
            if ((this.onEndUpdateActivityDelegate == null)) {
                this.onEndUpdateActivityDelegate = new EndOperationDelegate(this.OnEndUpdateActivity);
            }
            if ((this.onUpdateActivityCompletedDelegate == null)) {
                this.onUpdateActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateActivityCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateActivityDelegate, new object[] {
                        iActivityID,
                        iStatusID}, this.onEndUpdateActivityDelegate, this.onUpdateActivityCompletedDelegate, userState);
        }
        
        public string DeleteActivity(long iActivityID) {
            return base.Channel.DeleteActivity(iActivityID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteActivity(long iActivityID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteActivity(iActivityID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteActivity(System.IAsyncResult result) {
            return base.Channel.EndDeleteActivity(result);
        }
        
        private System.IAsyncResult OnBeginDeleteActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long iActivityID = ((long)(inValues[0]));
            return this.BeginDeleteActivity(iActivityID, callback, asyncState);
        }
        
        private object[] OnEndDeleteActivity(System.IAsyncResult result) {
            string retVal = this.EndDeleteActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteActivityCompleted(object state) {
            if ((this.DeleteActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteActivityCompleted(this, new DeleteActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteActivityAsync(long iActivityID) {
            this.DeleteActivityAsync(iActivityID, null);
        }
        
        public void DeleteActivityAsync(long iActivityID, object userState) {
            if ((this.onBeginDeleteActivityDelegate == null)) {
                this.onBeginDeleteActivityDelegate = new BeginOperationDelegate(this.OnBeginDeleteActivity);
            }
            if ((this.onEndDeleteActivityDelegate == null)) {
                this.onEndDeleteActivityDelegate = new EndOperationDelegate(this.OnEndDeleteActivity);
            }
            if ((this.onDeleteActivityCompletedDelegate == null)) {
                this.onDeleteActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteActivityCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteActivityDelegate, new object[] {
                        iActivityID}, this.onEndDeleteActivityDelegate, this.onDeleteActivityCompletedDelegate, userState);
        }
        
        public string DeleteActivities(string strActivityIds) {
            return base.Channel.DeleteActivities(strActivityIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteActivities(string strActivityIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteActivities(strActivityIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteActivities(System.IAsyncResult result) {
            return base.Channel.EndDeleteActivities(result);
        }
        
        private System.IAsyncResult OnBeginDeleteActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strActivityIds = ((string)(inValues[0]));
            return this.BeginDeleteActivities(strActivityIds, callback, asyncState);
        }
        
        private object[] OnEndDeleteActivities(System.IAsyncResult result) {
            string retVal = this.EndDeleteActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteActivitiesCompleted(object state) {
            if ((this.DeleteActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteActivitiesCompleted(this, new DeleteActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteActivitiesAsync(string strActivityIds) {
            this.DeleteActivitiesAsync(strActivityIds, null);
        }
        
        public void DeleteActivitiesAsync(string strActivityIds, object userState) {
            if ((this.onBeginDeleteActivitiesDelegate == null)) {
                this.onBeginDeleteActivitiesDelegate = new BeginOperationDelegate(this.OnBeginDeleteActivities);
            }
            if ((this.onEndDeleteActivitiesDelegate == null)) {
                this.onEndDeleteActivitiesDelegate = new EndOperationDelegate(this.OnEndDeleteActivities);
            }
            if ((this.onDeleteActivitiesCompletedDelegate == null)) {
                this.onDeleteActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteActivitiesDelegate, new object[] {
                        strActivityIds}, this.onEndDeleteActivitiesDelegate, this.onDeleteActivitiesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> GetPlans(int iUserID, string strCompany) {
            return base.Channel.GetPlans(iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPlans(int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlans(iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> EndGetPlans(System.IAsyncResult result) {
            return base.Channel.EndGetPlans(result);
        }
        
        private System.IAsyncResult OnBeginGetPlans(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            string strCompany = ((string)(inValues[1]));
            return this.BeginGetPlans(iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetPlans(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> retVal = this.EndGetPlans(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlansCompleted(object state) {
            if ((this.GetPlansCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlansCompleted(this, new GetPlansCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlansAsync(int iUserID, string strCompany) {
            this.GetPlansAsync(iUserID, strCompany, null);
        }
        
        public void GetPlansAsync(int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetPlansDelegate == null)) {
                this.onBeginGetPlansDelegate = new BeginOperationDelegate(this.OnBeginGetPlans);
            }
            if ((this.onEndGetPlansDelegate == null)) {
                this.onEndGetPlansDelegate = new EndOperationDelegate(this.OnEndGetPlans);
            }
            if ((this.onGetPlansCompletedDelegate == null)) {
                this.onGetPlansCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlansCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlansDelegate, new object[] {
                        iUserID,
                        strCompany}, this.onEndGetPlansDelegate, this.onGetPlansCompletedDelegate, userState);
        }
        
        public string SavePlan(WlocateWeb.FINDOriginal.PlanInfo udtPlan) {
            return base.Channel.SavePlan(udtPlan);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePlan(WlocateWeb.FINDOriginal.PlanInfo udtPlan, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePlan(udtPlan, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSavePlan(System.IAsyncResult result) {
            return base.Channel.EndSavePlan(result);
        }
        
        private System.IAsyncResult OnBeginSavePlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.PlanInfo udtPlan = ((WlocateWeb.FINDOriginal.PlanInfo)(inValues[0]));
            return this.BeginSavePlan(udtPlan, callback, asyncState);
        }
        
        private object[] OnEndSavePlan(System.IAsyncResult result) {
            string retVal = this.EndSavePlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePlanCompleted(object state) {
            if ((this.SavePlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePlanCompleted(this, new SavePlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePlanAsync(WlocateWeb.FINDOriginal.PlanInfo udtPlan) {
            this.SavePlanAsync(udtPlan, null);
        }
        
        public void SavePlanAsync(WlocateWeb.FINDOriginal.PlanInfo udtPlan, object userState) {
            if ((this.onBeginSavePlanDelegate == null)) {
                this.onBeginSavePlanDelegate = new BeginOperationDelegate(this.OnBeginSavePlan);
            }
            if ((this.onEndSavePlanDelegate == null)) {
                this.onEndSavePlanDelegate = new EndOperationDelegate(this.OnEndSavePlan);
            }
            if ((this.onSavePlanCompletedDelegate == null)) {
                this.onSavePlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePlanCompleted);
            }
            base.InvokeAsync(this.onBeginSavePlanDelegate, new object[] {
                        udtPlan}, this.onEndSavePlanDelegate, this.onSavePlanCompletedDelegate, userState);
        }
        
        public string SavePlans(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans) {
            return base.Channel.SavePlans(arrPlans);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePlans(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePlans(arrPlans, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSavePlans(System.IAsyncResult result) {
            return base.Channel.EndSavePlans(result);
        }
        
        private System.IAsyncResult OnBeginSavePlans(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans = ((System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo>)(inValues[0]));
            return this.BeginSavePlans(arrPlans, callback, asyncState);
        }
        
        private object[] OnEndSavePlans(System.IAsyncResult result) {
            string retVal = this.EndSavePlans(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePlansCompleted(object state) {
            if ((this.SavePlansCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePlansCompleted(this, new SavePlansCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePlansAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans) {
            this.SavePlansAsync(arrPlans, null);
        }
        
        public void SavePlansAsync(System.Collections.Generic.List<WlocateWeb.FINDOriginal.PlanInfo> arrPlans, object userState) {
            if ((this.onBeginSavePlansDelegate == null)) {
                this.onBeginSavePlansDelegate = new BeginOperationDelegate(this.OnBeginSavePlans);
            }
            if ((this.onEndSavePlansDelegate == null)) {
                this.onEndSavePlansDelegate = new EndOperationDelegate(this.OnEndSavePlans);
            }
            if ((this.onSavePlansCompletedDelegate == null)) {
                this.onSavePlansCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePlansCompleted);
            }
            base.InvokeAsync(this.onBeginSavePlansDelegate, new object[] {
                        arrPlans}, this.onEndSavePlansDelegate, this.onSavePlansCompletedDelegate, userState);
        }
        
        public string DeletePlan(int iPlanID) {
            return base.Channel.DeletePlan(iPlanID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePlan(int iPlanID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePlan(iPlanID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeletePlan(System.IAsyncResult result) {
            return base.Channel.EndDeletePlan(result);
        }
        
        private System.IAsyncResult OnBeginDeletePlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iPlanID = ((int)(inValues[0]));
            return this.BeginDeletePlan(iPlanID, callback, asyncState);
        }
        
        private object[] OnEndDeletePlan(System.IAsyncResult result) {
            string retVal = this.EndDeletePlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePlanCompleted(object state) {
            if ((this.DeletePlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePlanCompleted(this, new DeletePlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePlanAsync(int iPlanID) {
            this.DeletePlanAsync(iPlanID, null);
        }
        
        public void DeletePlanAsync(int iPlanID, object userState) {
            if ((this.onBeginDeletePlanDelegate == null)) {
                this.onBeginDeletePlanDelegate = new BeginOperationDelegate(this.OnBeginDeletePlan);
            }
            if ((this.onEndDeletePlanDelegate == null)) {
                this.onEndDeletePlanDelegate = new EndOperationDelegate(this.OnEndDeletePlan);
            }
            if ((this.onDeletePlanCompletedDelegate == null)) {
                this.onDeletePlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePlanCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePlanDelegate, new object[] {
                        iPlanID}, this.onEndDeletePlanDelegate, this.onDeletePlanCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> GetTrips(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            return base.Channel.GetTrips(evtFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTrips(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrips(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> EndGetTrips(System.IAsyncResult result) {
            return base.Channel.EndGetTrips(result);
        }
        
        private System.IAsyncResult OnBeginGetTrips(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo evtFilter = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetTrips(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetTrips(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.TripInfo> retVal = this.EndGetTrips(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTripsCompleted(object state) {
            if ((this.GetTripsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTripsCompleted(this, new GetTripsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTripsAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            this.GetTripsAsync(evtFilter, iUserID, strCompany, null);
        }
        
        public void GetTripsAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetTripsDelegate == null)) {
                this.onBeginGetTripsDelegate = new BeginOperationDelegate(this.OnBeginGetTrips);
            }
            if ((this.onEndGetTripsDelegate == null)) {
                this.onEndGetTripsDelegate = new EndOperationDelegate(this.OnEndGetTrips);
            }
            if ((this.onGetTripsCompletedDelegate == null)) {
                this.onGetTripsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTripsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTripsDelegate, new object[] {
                        evtFilter,
                        iUserID,
                        strCompany}, this.onEndGetTripsDelegate, this.onGetTripsCompletedDelegate, userState);
        }
        
        public string DeleteTrip(long iTripID) {
            return base.Channel.DeleteTrip(iTripID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTrip(long iTripID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTrip(iTripID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteTrip(System.IAsyncResult result) {
            return base.Channel.EndDeleteTrip(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTrip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long iTripID = ((long)(inValues[0]));
            return this.BeginDeleteTrip(iTripID, callback, asyncState);
        }
        
        private object[] OnEndDeleteTrip(System.IAsyncResult result) {
            string retVal = this.EndDeleteTrip(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTripCompleted(object state) {
            if ((this.DeleteTripCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTripCompleted(this, new DeleteTripCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTripAsync(long iTripID) {
            this.DeleteTripAsync(iTripID, null);
        }
        
        public void DeleteTripAsync(long iTripID, object userState) {
            if ((this.onBeginDeleteTripDelegate == null)) {
                this.onBeginDeleteTripDelegate = new BeginOperationDelegate(this.OnBeginDeleteTrip);
            }
            if ((this.onEndDeleteTripDelegate == null)) {
                this.onEndDeleteTripDelegate = new EndOperationDelegate(this.OnEndDeleteTrip);
            }
            if ((this.onDeleteTripCompletedDelegate == null)) {
                this.onDeleteTripCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTripCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTripDelegate, new object[] {
                        iTripID}, this.onEndDeleteTripDelegate, this.onDeleteTripCompletedDelegate, userState);
        }
        
        public string GenerateTrips(int iCompanyID) {
            return base.Channel.GenerateTrips(iCompanyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTrips(int iCompanyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTrips(iCompanyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGenerateTrips(System.IAsyncResult result) {
            return base.Channel.EndGenerateTrips(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTrips(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iCompanyID = ((int)(inValues[0]));
            return this.BeginGenerateTrips(iCompanyID, callback, asyncState);
        }
        
        private object[] OnEndGenerateTrips(System.IAsyncResult result) {
            string retVal = this.EndGenerateTrips(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTripsCompleted(object state) {
            if ((this.GenerateTripsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTripsCompleted(this, new GenerateTripsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTripsAsync(int iCompanyID) {
            this.GenerateTripsAsync(iCompanyID, null);
        }
        
        public void GenerateTripsAsync(int iCompanyID, object userState) {
            if ((this.onBeginGenerateTripsDelegate == null)) {
                this.onBeginGenerateTripsDelegate = new BeginOperationDelegate(this.OnBeginGenerateTrips);
            }
            if ((this.onEndGenerateTripsDelegate == null)) {
                this.onEndGenerateTripsDelegate = new EndOperationDelegate(this.OnEndGenerateTrips);
            }
            if ((this.onGenerateTripsCompletedDelegate == null)) {
                this.onGenerateTripsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTripsCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTripsDelegate, new object[] {
                        iCompanyID}, this.onEndGenerateTripsDelegate, this.onGenerateTripsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> GetEvents(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            return base.Channel.GetEvents(evtFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEvents(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvents(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> EndGetEvents(System.IAsyncResult result) {
            return base.Channel.EndGetEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo evtFilter = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetEvents(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetEvents(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.EventInfo> retVal = this.EndGetEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsCompleted(object state) {
            if ((this.GetEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            this.GetEventsAsync(evtFilter, iUserID, strCompany, null);
        }
        
        public void GetEventsAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetEventsDelegate == null)) {
                this.onBeginGetEventsDelegate = new BeginOperationDelegate(this.OnBeginGetEvents);
            }
            if ((this.onEndGetEventsDelegate == null)) {
                this.onEndGetEventsDelegate = new EndOperationDelegate(this.OnEndGetEvents);
            }
            if ((this.onGetEventsCompletedDelegate == null)) {
                this.onGetEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsDelegate, new object[] {
                        evtFilter,
                        iUserID,
                        strCompany}, this.onEndGetEventsDelegate, this.onGetEventsCompletedDelegate, userState);
        }
        
        public string SaveEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent) {
            return base.Channel.SaveEvent(udtEvent);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEvent(udtEvent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveEvent(System.IAsyncResult result) {
            return base.Channel.EndSaveEvent(result);
        }
        
        private System.IAsyncResult OnBeginSaveEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo udtEvent = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            return this.BeginSaveEvent(udtEvent, callback, asyncState);
        }
        
        private object[] OnEndSaveEvent(System.IAsyncResult result) {
            string retVal = this.EndSaveEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEventCompleted(object state) {
            if ((this.SaveEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEventCompleted(this, new SaveEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent) {
            this.SaveEventAsync(udtEvent, null);
        }
        
        public void SaveEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, object userState) {
            if ((this.onBeginSaveEventDelegate == null)) {
                this.onBeginSaveEventDelegate = new BeginOperationDelegate(this.OnBeginSaveEvent);
            }
            if ((this.onEndSaveEventDelegate == null)) {
                this.onEndSaveEventDelegate = new EndOperationDelegate(this.OnEndSaveEvent);
            }
            if ((this.onSaveEventCompletedDelegate == null)) {
                this.onSaveEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEventCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEventDelegate, new object[] {
                        udtEvent}, this.onEndSaveEventDelegate, this.onSaveEventCompletedDelegate, userState);
        }
        
        public string CancelEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag) {
            return base.Channel.CancelEvent(udtEvent, bResetFlag);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelEvent(udtEvent, bResetFlag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCancelEvent(System.IAsyncResult result) {
            return base.Channel.EndCancelEvent(result);
        }
        
        private System.IAsyncResult OnBeginCancelEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo udtEvent = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            bool bResetFlag = ((bool)(inValues[1]));
            return this.BeginCancelEvent(udtEvent, bResetFlag, callback, asyncState);
        }
        
        private object[] OnEndCancelEvent(System.IAsyncResult result) {
            string retVal = this.EndCancelEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelEventCompleted(object state) {
            if ((this.CancelEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelEventCompleted(this, new CancelEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag) {
            this.CancelEventAsync(udtEvent, bResetFlag, null);
        }
        
        public void CancelEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, bool bResetFlag, object userState) {
            if ((this.onBeginCancelEventDelegate == null)) {
                this.onBeginCancelEventDelegate = new BeginOperationDelegate(this.OnBeginCancelEvent);
            }
            if ((this.onEndCancelEventDelegate == null)) {
                this.onEndCancelEventDelegate = new EndOperationDelegate(this.OnEndCancelEvent);
            }
            if ((this.onCancelEventCompletedDelegate == null)) {
                this.onCancelEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelEventCompleted);
            }
            base.InvokeAsync(this.onBeginCancelEventDelegate, new object[] {
                        udtEvent,
                        bResetFlag}, this.onEndCancelEventDelegate, this.onCancelEventCompletedDelegate, userState);
        }
        
        public string FlagEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent) {
            return base.Channel.FlagEvent(udtEvent);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFlagEvent(WlocateWeb.FINDOriginal.EventInfo udtEvent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlagEvent(udtEvent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndFlagEvent(System.IAsyncResult result) {
            return base.Channel.EndFlagEvent(result);
        }
        
        private System.IAsyncResult OnBeginFlagEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo udtEvent = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            return this.BeginFlagEvent(udtEvent, callback, asyncState);
        }
        
        private object[] OnEndFlagEvent(System.IAsyncResult result) {
            string retVal = this.EndFlagEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlagEventCompleted(object state) {
            if ((this.FlagEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlagEventCompleted(this, new FlagEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlagEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent) {
            this.FlagEventAsync(udtEvent, null);
        }
        
        public void FlagEventAsync(WlocateWeb.FINDOriginal.EventInfo udtEvent, object userState) {
            if ((this.onBeginFlagEventDelegate == null)) {
                this.onBeginFlagEventDelegate = new BeginOperationDelegate(this.OnBeginFlagEvent);
            }
            if ((this.onEndFlagEventDelegate == null)) {
                this.onEndFlagEventDelegate = new EndOperationDelegate(this.OnEndFlagEvent);
            }
            if ((this.onFlagEventCompletedDelegate == null)) {
                this.onFlagEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlagEventCompleted);
            }
            base.InvokeAsync(this.onBeginFlagEventDelegate, new object[] {
                        udtEvent}, this.onEndFlagEventDelegate, this.onFlagEventCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> GetPositions(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany) {
            return base.Channel.GetPositions(posFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPositions(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPositions(posFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> EndGetPositions(System.IAsyncResult result) {
            return base.Channel.EndGetPositions(result);
        }
        
        private System.IAsyncResult OnBeginGetPositions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.PosInfo posFilter = ((WlocateWeb.FINDOriginal.PosInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetPositions(posFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetPositions(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.PosInfo> retVal = this.EndGetPositions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPositionsCompleted(object state) {
            if ((this.GetPositionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPositionsCompleted(this, new GetPositionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPositionsAsync(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany) {
            this.GetPositionsAsync(posFilter, iUserID, strCompany, null);
        }
        
        public void GetPositionsAsync(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetPositionsDelegate == null)) {
                this.onBeginGetPositionsDelegate = new BeginOperationDelegate(this.OnBeginGetPositions);
            }
            if ((this.onEndGetPositionsDelegate == null)) {
                this.onEndGetPositionsDelegate = new EndOperationDelegate(this.OnEndGetPositions);
            }
            if ((this.onGetPositionsCompletedDelegate == null)) {
                this.onGetPositionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPositionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPositionsDelegate, new object[] {
                        posFilter,
                        iUserID,
                        strCompany}, this.onEndGetPositionsDelegate, this.onGetPositionsCompletedDelegate, userState);
        }
        
        public string SavePosition(WlocateWeb.FINDOriginal.PosInfo udtPos) {
            return base.Channel.SavePosition(udtPos);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSavePosition(WlocateWeb.FINDOriginal.PosInfo udtPos, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePosition(udtPos, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSavePosition(System.IAsyncResult result) {
            return base.Channel.EndSavePosition(result);
        }
        
        private System.IAsyncResult OnBeginSavePosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.PosInfo udtPos = ((WlocateWeb.FINDOriginal.PosInfo)(inValues[0]));
            return this.BeginSavePosition(udtPos, callback, asyncState);
        }
        
        private object[] OnEndSavePosition(System.IAsyncResult result) {
            string retVal = this.EndSavePosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePositionCompleted(object state) {
            if ((this.SavePositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePositionCompleted(this, new SavePositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePositionAsync(WlocateWeb.FINDOriginal.PosInfo udtPos) {
            this.SavePositionAsync(udtPos, null);
        }
        
        public void SavePositionAsync(WlocateWeb.FINDOriginal.PosInfo udtPos, object userState) {
            if ((this.onBeginSavePositionDelegate == null)) {
                this.onBeginSavePositionDelegate = new BeginOperationDelegate(this.OnBeginSavePosition);
            }
            if ((this.onEndSavePositionDelegate == null)) {
                this.onEndSavePositionDelegate = new EndOperationDelegate(this.OnEndSavePosition);
            }
            if ((this.onSavePositionCompletedDelegate == null)) {
                this.onSavePositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePositionCompleted);
            }
            base.InvokeAsync(this.onBeginSavePositionDelegate, new object[] {
                        udtPos}, this.onEndSavePositionDelegate, this.onSavePositionCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> GetZoneReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            return base.Channel.GetZoneReport(evtFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZoneReport(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZoneReport(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> EndGetZoneReport(System.IAsyncResult result) {
            return base.Channel.EndGetZoneReport(result);
        }
        
        private System.IAsyncResult OnBeginGetZoneReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.EventInfo evtFilter = ((WlocateWeb.FINDOriginal.EventInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetZoneReport(evtFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetZoneReport(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneReport> retVal = this.EndGetZoneReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZoneReportCompleted(object state) {
            if ((this.GetZoneReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZoneReportCompleted(this, new GetZoneReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZoneReportAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany) {
            this.GetZoneReportAsync(evtFilter, iUserID, strCompany, null);
        }
        
        public void GetZoneReportAsync(WlocateWeb.FINDOriginal.EventInfo evtFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetZoneReportDelegate == null)) {
                this.onBeginGetZoneReportDelegate = new BeginOperationDelegate(this.OnBeginGetZoneReport);
            }
            if ((this.onEndGetZoneReportDelegate == null)) {
                this.onEndGetZoneReportDelegate = new EndOperationDelegate(this.OnEndGetZoneReport);
            }
            if ((this.onGetZoneReportCompletedDelegate == null)) {
                this.onGetZoneReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZoneReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetZoneReportDelegate, new object[] {
                        evtFilter,
                        iUserID,
                        strCompany}, this.onEndGetZoneReportDelegate, this.onGetZoneReportCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> GetSpeedReport(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany) {
            return base.Channel.GetSpeedReport(posFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSpeedReport(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpeedReport(posFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> EndGetSpeedReport(System.IAsyncResult result) {
            return base.Channel.EndGetSpeedReport(result);
        }
        
        private System.IAsyncResult OnBeginGetSpeedReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.PosInfo posFilter = ((WlocateWeb.FINDOriginal.PosInfo)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetSpeedReport(posFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetSpeedReport(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.SpeedReport> retVal = this.EndGetSpeedReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpeedReportCompleted(object state) {
            if ((this.GetSpeedReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpeedReportCompleted(this, new GetSpeedReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpeedReportAsync(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany) {
            this.GetSpeedReportAsync(posFilter, iUserID, strCompany, null);
        }
        
        public void GetSpeedReportAsync(WlocateWeb.FINDOriginal.PosInfo posFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetSpeedReportDelegate == null)) {
                this.onBeginGetSpeedReportDelegate = new BeginOperationDelegate(this.OnBeginGetSpeedReport);
            }
            if ((this.onEndGetSpeedReportDelegate == null)) {
                this.onEndGetSpeedReportDelegate = new EndOperationDelegate(this.OnEndGetSpeedReport);
            }
            if ((this.onGetSpeedReportCompletedDelegate == null)) {
                this.onGetSpeedReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpeedReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpeedReportDelegate, new object[] {
                        posFilter,
                        iUserID,
                        strCompany}, this.onEndGetSpeedReportDelegate, this.onGetSpeedReportCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> GetUtilizeReport(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany) {
            return base.Channel.GetUtilizeReport(utilFilter, iUserID, strCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUtilizeReport(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUtilizeReport(utilFilter, iUserID, strCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> EndGetUtilizeReport(System.IAsyncResult result) {
            return base.Channel.EndGetUtilizeReport(result);
        }
        
        private System.IAsyncResult OnBeginGetUtilizeReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.UtilizeReport utilFilter = ((WlocateWeb.FINDOriginal.UtilizeReport)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetUtilizeReport(utilFilter, iUserID, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetUtilizeReport(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.UtilizeReport> retVal = this.EndGetUtilizeReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUtilizeReportCompleted(object state) {
            if ((this.GetUtilizeReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUtilizeReportCompleted(this, new GetUtilizeReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUtilizeReportAsync(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany) {
            this.GetUtilizeReportAsync(utilFilter, iUserID, strCompany, null);
        }
        
        public void GetUtilizeReportAsync(WlocateWeb.FINDOriginal.UtilizeReport utilFilter, int iUserID, string strCompany, object userState) {
            if ((this.onBeginGetUtilizeReportDelegate == null)) {
                this.onBeginGetUtilizeReportDelegate = new BeginOperationDelegate(this.OnBeginGetUtilizeReport);
            }
            if ((this.onEndGetUtilizeReportDelegate == null)) {
                this.onEndGetUtilizeReportDelegate = new EndOperationDelegate(this.OnEndGetUtilizeReport);
            }
            if ((this.onGetUtilizeReportCompletedDelegate == null)) {
                this.onGetUtilizeReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUtilizeReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetUtilizeReportDelegate, new object[] {
                        utilFilter,
                        iUserID,
                        strCompany}, this.onEndGetUtilizeReportDelegate, this.onGetUtilizeReportCompletedDelegate, userState);
        }
        
        public string CheckLicense(int iUserID) {
            return base.Channel.CheckLicense(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckLicense(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckLicense(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckLicense(System.IAsyncResult result) {
            return base.Channel.EndCheckLicense(result);
        }
        
        private System.IAsyncResult OnBeginCheckLicense(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginCheckLicense(iUserID, callback, asyncState);
        }
        
        private object[] OnEndCheckLicense(System.IAsyncResult result) {
            string retVal = this.EndCheckLicense(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckLicenseCompleted(object state) {
            if ((this.CheckLicenseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckLicenseCompleted(this, new CheckLicenseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckLicenseAsync(int iUserID) {
            this.CheckLicenseAsync(iUserID, null);
        }
        
        public void CheckLicenseAsync(int iUserID, object userState) {
            if ((this.onBeginCheckLicenseDelegate == null)) {
                this.onBeginCheckLicenseDelegate = new BeginOperationDelegate(this.OnBeginCheckLicense);
            }
            if ((this.onEndCheckLicenseDelegate == null)) {
                this.onEndCheckLicenseDelegate = new EndOperationDelegate(this.OnEndCheckLicense);
            }
            if ((this.onCheckLicenseCompletedDelegate == null)) {
                this.onCheckLicenseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckLicenseCompleted);
            }
            base.InvokeAsync(this.onBeginCheckLicenseDelegate, new object[] {
                        iUserID}, this.onEndCheckLicenseDelegate, this.onCheckLicenseCompletedDelegate, userState);
        }
        
        public string GetAppKey(string strKey) {
            return base.Channel.GetAppKey(strKey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAppKey(string strKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAppKey(strKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAppKey(System.IAsyncResult result) {
            return base.Channel.EndGetAppKey(result);
        }
        
        private System.IAsyncResult OnBeginGetAppKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strKey = ((string)(inValues[0]));
            return this.BeginGetAppKey(strKey, callback, asyncState);
        }
        
        private object[] OnEndGetAppKey(System.IAsyncResult result) {
            string retVal = this.EndGetAppKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAppKeyCompleted(object state) {
            if ((this.GetAppKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAppKeyCompleted(this, new GetAppKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAppKeyAsync(string strKey) {
            this.GetAppKeyAsync(strKey, null);
        }
        
        public void GetAppKeyAsync(string strKey, object userState) {
            if ((this.onBeginGetAppKeyDelegate == null)) {
                this.onBeginGetAppKeyDelegate = new BeginOperationDelegate(this.OnBeginGetAppKey);
            }
            if ((this.onEndGetAppKeyDelegate == null)) {
                this.onEndGetAppKeyDelegate = new EndOperationDelegate(this.OnEndGetAppKey);
            }
            if ((this.onGetAppKeyCompletedDelegate == null)) {
                this.onGetAppKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAppKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAppKeyDelegate, new object[] {
                        strKey}, this.onEndGetAppKeyDelegate, this.onGetAppKeyCompletedDelegate, userState);
        }
        
        public System.DateTime GetServerTime() {
            return base.Channel.GetServerTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetServerTime(System.IAsyncResult result) {
            return base.Channel.EndGetServerTime(result);
        }
        
        private System.IAsyncResult OnBeginGetServerTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerTime(callback, asyncState);
        }
        
        private object[] OnEndGetServerTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetServerTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerTimeCompleted(object state) {
            if ((this.GetServerTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerTimeAsync() {
            this.GetServerTimeAsync(null);
        }
        
        public void GetServerTimeAsync(object userState) {
            if ((this.onBeginGetServerTimeDelegate == null)) {
                this.onBeginGetServerTimeDelegate = new BeginOperationDelegate(this.OnBeginGetServerTime);
            }
            if ((this.onEndGetServerTimeDelegate == null)) {
                this.onEndGetServerTimeDelegate = new EndOperationDelegate(this.OnEndGetServerTime);
            }
            if ((this.onGetServerTimeCompletedDelegate == null)) {
                this.onGetServerTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerTimeDelegate, null, this.onEndGetServerTimeDelegate, this.onGetServerTimeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> GetFeatures() {
            return base.Channel.GetFeatures();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFeatures(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFeatures(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> EndGetFeatures(System.IAsyncResult result) {
            return base.Channel.EndGetFeatures(result);
        }
        
        private System.IAsyncResult OnBeginGetFeatures(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFeatures(callback, asyncState);
        }
        
        private object[] OnEndGetFeatures(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.FeatureInfo> retVal = this.EndGetFeatures(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFeaturesCompleted(object state) {
            if ((this.GetFeaturesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFeaturesCompleted(this, new GetFeaturesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFeaturesAsync() {
            this.GetFeaturesAsync(null);
        }
        
        public void GetFeaturesAsync(object userState) {
            if ((this.onBeginGetFeaturesDelegate == null)) {
                this.onBeginGetFeaturesDelegate = new BeginOperationDelegate(this.OnBeginGetFeatures);
            }
            if ((this.onEndGetFeaturesDelegate == null)) {
                this.onEndGetFeaturesDelegate = new EndOperationDelegate(this.OnEndGetFeatures);
            }
            if ((this.onGetFeaturesCompletedDelegate == null)) {
                this.onGetFeaturesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFeaturesCompleted);
            }
            base.InvokeAsync(this.onBeginGetFeaturesDelegate, null, this.onEndGetFeaturesDelegate, this.onGetFeaturesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> GetNames(int iType, int iUserID) {
            return base.Channel.GetNames(iType, iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNames(int iType, int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNames(iType, iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> EndGetNames(System.IAsyncResult result) {
            return base.Channel.EndGetNames(result);
        }
        
        private System.IAsyncResult OnBeginGetNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iType = ((int)(inValues[0]));
            int iUserID = ((int)(inValues[1]));
            return this.BeginGetNames(iType, iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetNames(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.NameInfo> retVal = this.EndGetNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNamesCompleted(object state) {
            if ((this.GetNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNamesCompleted(this, new GetNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNamesAsync(int iType, int iUserID) {
            this.GetNamesAsync(iType, iUserID, null);
        }
        
        public void GetNamesAsync(int iType, int iUserID, object userState) {
            if ((this.onBeginGetNamesDelegate == null)) {
                this.onBeginGetNamesDelegate = new BeginOperationDelegate(this.OnBeginGetNames);
            }
            if ((this.onEndGetNamesDelegate == null)) {
                this.onEndGetNamesDelegate = new EndOperationDelegate(this.OnEndGetNames);
            }
            if ((this.onGetNamesCompletedDelegate == null)) {
                this.onGetNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNamesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNamesDelegate, new object[] {
                        iType,
                        iUserID}, this.onEndGetNamesDelegate, this.onGetNamesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStrings(int iLanguageID) {
            return base.Channel.GetStrings(iLanguageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStrings(int iLanguageID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStrings(iLanguageID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, string> EndGetStrings(System.IAsyncResult result) {
            return base.Channel.EndGetStrings(result);
        }
        
        private System.IAsyncResult OnBeginGetStrings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iLanguageID = ((int)(inValues[0]));
            return this.BeginGetStrings(iLanguageID, callback, asyncState);
        }
        
        private object[] OnEndGetStrings(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = this.EndGetStrings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStringsCompleted(object state) {
            if ((this.GetStringsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStringsCompleted(this, new GetStringsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStringsAsync(int iLanguageID) {
            this.GetStringsAsync(iLanguageID, null);
        }
        
        public void GetStringsAsync(int iLanguageID, object userState) {
            if ((this.onBeginGetStringsDelegate == null)) {
                this.onBeginGetStringsDelegate = new BeginOperationDelegate(this.OnBeginGetStrings);
            }
            if ((this.onEndGetStringsDelegate == null)) {
                this.onEndGetStringsDelegate = new EndOperationDelegate(this.OnEndGetStrings);
            }
            if ((this.onGetStringsCompletedDelegate == null)) {
                this.onGetStringsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStringsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStringsDelegate, new object[] {
                        iLanguageID}, this.onEndGetStringsDelegate, this.onGetStringsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetApiKeys() {
            return base.Channel.GetApiKeys();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApiKeys(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApiKeys(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, string> EndGetApiKeys(System.IAsyncResult result) {
            return base.Channel.EndGetApiKeys(result);
        }
        
        private System.IAsyncResult OnBeginGetApiKeys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetApiKeys(callback, asyncState);
        }
        
        private object[] OnEndGetApiKeys(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = this.EndGetApiKeys(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApiKeysCompleted(object state) {
            if ((this.GetApiKeysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApiKeysCompleted(this, new GetApiKeysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApiKeysAsync() {
            this.GetApiKeysAsync(null);
        }
        
        public void GetApiKeysAsync(object userState) {
            if ((this.onBeginGetApiKeysDelegate == null)) {
                this.onBeginGetApiKeysDelegate = new BeginOperationDelegate(this.OnBeginGetApiKeys);
            }
            if ((this.onEndGetApiKeysDelegate == null)) {
                this.onEndGetApiKeysDelegate = new EndOperationDelegate(this.OnEndGetApiKeys);
            }
            if ((this.onGetApiKeysCompletedDelegate == null)) {
                this.onGetApiKeysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApiKeysCompleted);
            }
            base.InvokeAsync(this.onBeginGetApiKeysDelegate, null, this.onEndGetApiKeysDelegate, this.onGetApiKeysCompletedDelegate, userState);
        }
        
        public string GetServerNoticeMessage() {
            return base.Channel.GetServerNoticeMessage();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerNoticeMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerNoticeMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetServerNoticeMessage(System.IAsyncResult result) {
            return base.Channel.EndGetServerNoticeMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetServerNoticeMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerNoticeMessage(callback, asyncState);
        }
        
        private object[] OnEndGetServerNoticeMessage(System.IAsyncResult result) {
            string retVal = this.EndGetServerNoticeMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerNoticeMessageCompleted(object state) {
            if ((this.GetServerNoticeMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerNoticeMessageCompleted(this, new GetServerNoticeMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerNoticeMessageAsync() {
            this.GetServerNoticeMessageAsync(null);
        }
        
        public void GetServerNoticeMessageAsync(object userState) {
            if ((this.onBeginGetServerNoticeMessageDelegate == null)) {
                this.onBeginGetServerNoticeMessageDelegate = new BeginOperationDelegate(this.OnBeginGetServerNoticeMessage);
            }
            if ((this.onEndGetServerNoticeMessageDelegate == null)) {
                this.onEndGetServerNoticeMessageDelegate = new EndOperationDelegate(this.OnEndGetServerNoticeMessage);
            }
            if ((this.onGetServerNoticeMessageCompletedDelegate == null)) {
                this.onGetServerNoticeMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerNoticeMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerNoticeMessageDelegate, null, this.onEndGetServerNoticeMessageDelegate, this.onGetServerNoticeMessageCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> GetCompanies(int iUserID) {
            return base.Channel.GetCompanies(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCompanies(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanies(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> EndGetCompanies(System.IAsyncResult result) {
            return base.Channel.EndGetCompanies(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetCompanies(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetCompanies(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.CompanyInfo> retVal = this.EndGetCompanies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompaniesCompleted(object state) {
            if ((this.GetCompaniesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompaniesCompleted(this, new GetCompaniesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompaniesAsync(int iUserID) {
            this.GetCompaniesAsync(iUserID, null);
        }
        
        public void GetCompaniesAsync(int iUserID, object userState) {
            if ((this.onBeginGetCompaniesDelegate == null)) {
                this.onBeginGetCompaniesDelegate = new BeginOperationDelegate(this.OnBeginGetCompanies);
            }
            if ((this.onEndGetCompaniesDelegate == null)) {
                this.onEndGetCompaniesDelegate = new EndOperationDelegate(this.OnEndGetCompanies);
            }
            if ((this.onGetCompaniesCompletedDelegate == null)) {
                this.onGetCompaniesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompaniesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompaniesDelegate, new object[] {
                        iUserID}, this.onEndGetCompaniesDelegate, this.onGetCompaniesCompletedDelegate, userState);
        }
        
        public string SaveCompany(WlocateWeb.FINDOriginal.CompanyInfo udtCompany) {
            return base.Channel.SaveCompany(udtCompany);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveCompany(WlocateWeb.FINDOriginal.CompanyInfo udtCompany, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCompany(udtCompany, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveCompany(System.IAsyncResult result) {
            return base.Channel.EndSaveCompany(result);
        }
        
        private System.IAsyncResult OnBeginSaveCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.CompanyInfo udtCompany = ((WlocateWeb.FINDOriginal.CompanyInfo)(inValues[0]));
            return this.BeginSaveCompany(udtCompany, callback, asyncState);
        }
        
        private object[] OnEndSaveCompany(System.IAsyncResult result) {
            string retVal = this.EndSaveCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCompanyCompleted(object state) {
            if ((this.SaveCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompanyCompleted(this, new SaveCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCompanyAsync(WlocateWeb.FINDOriginal.CompanyInfo udtCompany) {
            this.SaveCompanyAsync(udtCompany, null);
        }
        
        public void SaveCompanyAsync(WlocateWeb.FINDOriginal.CompanyInfo udtCompany, object userState) {
            if ((this.onBeginSaveCompanyDelegate == null)) {
                this.onBeginSaveCompanyDelegate = new BeginOperationDelegate(this.OnBeginSaveCompany);
            }
            if ((this.onEndSaveCompanyDelegate == null)) {
                this.onEndSaveCompanyDelegate = new EndOperationDelegate(this.OnEndSaveCompany);
            }
            if ((this.onSaveCompanyCompletedDelegate == null)) {
                this.onSaveCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCompanyDelegate, new object[] {
                        udtCompany}, this.onEndSaveCompanyDelegate, this.onSaveCompanyCompletedDelegate, userState);
        }
        
        public string DeleteCompany(int iCompanyID) {
            return base.Channel.DeleteCompany(iCompanyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCompany(int iCompanyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCompany(iCompanyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteCompany(System.IAsyncResult result) {
            return base.Channel.EndDeleteCompany(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iCompanyID = ((int)(inValues[0]));
            return this.BeginDeleteCompany(iCompanyID, callback, asyncState);
        }
        
        private object[] OnEndDeleteCompany(System.IAsyncResult result) {
            string retVal = this.EndDeleteCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompanyCompleted(object state) {
            if ((this.DeleteCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompanyCompleted(this, new DeleteCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCompanyAsync(int iCompanyID) {
            this.DeleteCompanyAsync(iCompanyID, null);
        }
        
        public void DeleteCompanyAsync(int iCompanyID, object userState) {
            if ((this.onBeginDeleteCompanyDelegate == null)) {
                this.onBeginDeleteCompanyDelegate = new BeginOperationDelegate(this.OnBeginDeleteCompany);
            }
            if ((this.onEndDeleteCompanyDelegate == null)) {
                this.onEndDeleteCompanyDelegate = new EndOperationDelegate(this.OnEndDeleteCompany);
            }
            if ((this.onDeleteCompanyCompletedDelegate == null)) {
                this.onDeleteCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCompanyDelegate, new object[] {
                        iCompanyID}, this.onEndDeleteCompanyDelegate, this.onDeleteCompanyCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> GetUsers(int iUserID) {
            return base.Channel.GetUsers(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetUsers(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.UserInfo> retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync(int iUserID) {
            this.GetUsersAsync(iUserID, null);
        }
        
        public void GetUsersAsync(int iUserID, object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, new object[] {
                        iUserID}, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        public string SaveUser(WlocateWeb.FINDOriginal.UserInfo udtUser) {
            return base.Channel.SaveUser(udtUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveUser(WlocateWeb.FINDOriginal.UserInfo udtUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUser(udtUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveUser(System.IAsyncResult result) {
            return base.Channel.EndSaveUser(result);
        }
        
        private System.IAsyncResult OnBeginSaveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.UserInfo udtUser = ((WlocateWeb.FINDOriginal.UserInfo)(inValues[0]));
            return this.BeginSaveUser(udtUser, callback, asyncState);
        }
        
        private object[] OnEndSaveUser(System.IAsyncResult result) {
            string retVal = this.EndSaveUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveUserCompleted(object state) {
            if ((this.SaveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUserCompleted(this, new SaveUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUserAsync(WlocateWeb.FINDOriginal.UserInfo udtUser) {
            this.SaveUserAsync(udtUser, null);
        }
        
        public void SaveUserAsync(WlocateWeb.FINDOriginal.UserInfo udtUser, object userState) {
            if ((this.onBeginSaveUserDelegate == null)) {
                this.onBeginSaveUserDelegate = new BeginOperationDelegate(this.OnBeginSaveUser);
            }
            if ((this.onEndSaveUserDelegate == null)) {
                this.onEndSaveUserDelegate = new EndOperationDelegate(this.OnEndSaveUser);
            }
            if ((this.onSaveUserCompletedDelegate == null)) {
                this.onSaveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUserCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUserDelegate, new object[] {
                        udtUser}, this.onEndSaveUserDelegate, this.onSaveUserCompletedDelegate, userState);
        }
        
        public string DeleteUser(int iUserID) {
            return base.Channel.DeleteUser(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginDeleteUser(iUserID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            string retVal = this.EndDeleteUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(int iUserID) {
            this.DeleteUserAsync(iUserID, null);
        }
        
        public void DeleteUserAsync(int iUserID, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        iUserID}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        public WlocateWeb.FINDOriginal.UserInfo LogInUser(string strUser, string strPassword) {
            return base.Channel.LogInUser(strUser, strPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogInUser(string strUser, string strPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogInUser(strUser, strPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WlocateWeb.FINDOriginal.UserInfo EndLogInUser(System.IAsyncResult result) {
            return base.Channel.EndLogInUser(result);
        }
        
        private System.IAsyncResult OnBeginLogInUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUser = ((string)(inValues[0]));
            string strPassword = ((string)(inValues[1]));
            return this.BeginLogInUser(strUser, strPassword, callback, asyncState);
        }
        
        private object[] OnEndLogInUser(System.IAsyncResult result) {
            WlocateWeb.FINDOriginal.UserInfo retVal = this.EndLogInUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogInUserCompleted(object state) {
            if ((this.LogInUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInUserCompleted(this, new LogInUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInUserAsync(string strUser, string strPassword) {
            this.LogInUserAsync(strUser, strPassword, null);
        }
        
        public void LogInUserAsync(string strUser, string strPassword, object userState) {
            if ((this.onBeginLogInUserDelegate == null)) {
                this.onBeginLogInUserDelegate = new BeginOperationDelegate(this.OnBeginLogInUser);
            }
            if ((this.onEndLogInUserDelegate == null)) {
                this.onEndLogInUserDelegate = new EndOperationDelegate(this.OnEndLogInUser);
            }
            if ((this.onLogInUserCompletedDelegate == null)) {
                this.onLogInUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInUserCompleted);
            }
            base.InvokeAsync(this.onBeginLogInUserDelegate, new object[] {
                        strUser,
                        strPassword}, this.onEndLogInUserDelegate, this.onLogInUserCompletedDelegate, userState);
        }
        
        public WlocateWeb.FINDOriginal.UserInfo GetUser(int iUserID, string strPassword) {
            return base.Channel.GetUser(iUserID, strPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUser(int iUserID, string strPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(iUserID, strPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WlocateWeb.FINDOriginal.UserInfo EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            string strPassword = ((string)(inValues[1]));
            return this.BeginGetUser(iUserID, strPassword, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            WlocateWeb.FINDOriginal.UserInfo retVal = this.EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(int iUserID, string strPassword) {
            this.GetUserAsync(iUserID, strPassword, null);
        }
        
        public void GetUserAsync(int iUserID, string strPassword, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        iUserID,
                        strPassword}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        public string UnlockUser(int iUserID) {
            return base.Channel.UnlockUser(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnlockUser(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlockUser(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUnlockUser(System.IAsyncResult result) {
            return base.Channel.EndUnlockUser(result);
        }
        
        private System.IAsyncResult OnBeginUnlockUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginUnlockUser(iUserID, callback, asyncState);
        }
        
        private object[] OnEndUnlockUser(System.IAsyncResult result) {
            string retVal = this.EndUnlockUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlockUserCompleted(object state) {
            if ((this.UnlockUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlockUserCompleted(this, new UnlockUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlockUserAsync(int iUserID) {
            this.UnlockUserAsync(iUserID, null);
        }
        
        public void UnlockUserAsync(int iUserID, object userState) {
            if ((this.onBeginUnlockUserDelegate == null)) {
                this.onBeginUnlockUserDelegate = new BeginOperationDelegate(this.OnBeginUnlockUser);
            }
            if ((this.onEndUnlockUserDelegate == null)) {
                this.onEndUnlockUserDelegate = new EndOperationDelegate(this.OnEndUnlockUser);
            }
            if ((this.onUnlockUserCompletedDelegate == null)) {
                this.onUnlockUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlockUserCompleted);
            }
            base.InvokeAsync(this.onBeginUnlockUserDelegate, new object[] {
                        iUserID}, this.onEndUnlockUserDelegate, this.onUnlockUserCompletedDelegate, userState);
        }
        
        public string ResetPassword(string strUser) {
            return base.Channel.ResetPassword(strUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetPassword(string strUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(strUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUser = ((string)(inValues[0]));
            return this.BeginResetPassword(strUser, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            string retVal = this.EndResetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(string strUser) {
            this.ResetPasswordAsync(strUser, null);
        }
        
        public void ResetPasswordAsync(string strUser, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        strUser}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        public string Geocode(string strLocation) {
            return base.Channel.Geocode(strLocation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGeocode(string strLocation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGeocode(strLocation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGeocode(System.IAsyncResult result) {
            return base.Channel.EndGeocode(result);
        }
        
        private System.IAsyncResult OnBeginGeocode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strLocation = ((string)(inValues[0]));
            return this.BeginGeocode(strLocation, callback, asyncState);
        }
        
        private object[] OnEndGeocode(System.IAsyncResult result) {
            string retVal = this.EndGeocode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGeocodeCompleted(object state) {
            if ((this.GeocodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GeocodeCompleted(this, new GeocodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GeocodeAsync(string strLocation) {
            this.GeocodeAsync(strLocation, null);
        }
        
        public void GeocodeAsync(string strLocation, object userState) {
            if ((this.onBeginGeocodeDelegate == null)) {
                this.onBeginGeocodeDelegate = new BeginOperationDelegate(this.OnBeginGeocode);
            }
            if ((this.onEndGeocodeDelegate == null)) {
                this.onEndGeocodeDelegate = new EndOperationDelegate(this.OnEndGeocode);
            }
            if ((this.onGeocodeCompletedDelegate == null)) {
                this.onGeocodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGeocodeCompleted);
            }
            base.InvokeAsync(this.onBeginGeocodeDelegate, new object[] {
                        strLocation}, this.onEndGeocodeDelegate, this.onGeocodeCompletedDelegate, userState);
        }
        
        public string ReverseGeocode(double lLatitude, double lLongitude) {
            return base.Channel.ReverseGeocode(lLatitude, lLongitude);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReverseGeocode(double lLatitude, double lLongitude, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReverseGeocode(lLatitude, lLongitude, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndReverseGeocode(System.IAsyncResult result) {
            return base.Channel.EndReverseGeocode(result);
        }
        
        private System.IAsyncResult OnBeginReverseGeocode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double lLatitude = ((double)(inValues[0]));
            double lLongitude = ((double)(inValues[1]));
            return this.BeginReverseGeocode(lLatitude, lLongitude, callback, asyncState);
        }
        
        private object[] OnEndReverseGeocode(System.IAsyncResult result) {
            string retVal = this.EndReverseGeocode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReverseGeocodeCompleted(object state) {
            if ((this.ReverseGeocodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReverseGeocodeCompleted(this, new ReverseGeocodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReverseGeocodeAsync(double lLatitude, double lLongitude) {
            this.ReverseGeocodeAsync(lLatitude, lLongitude, null);
        }
        
        public void ReverseGeocodeAsync(double lLatitude, double lLongitude, object userState) {
            if ((this.onBeginReverseGeocodeDelegate == null)) {
                this.onBeginReverseGeocodeDelegate = new BeginOperationDelegate(this.OnBeginReverseGeocode);
            }
            if ((this.onEndReverseGeocodeDelegate == null)) {
                this.onEndReverseGeocodeDelegate = new EndOperationDelegate(this.OnEndReverseGeocode);
            }
            if ((this.onReverseGeocodeCompletedDelegate == null)) {
                this.onReverseGeocodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReverseGeocodeCompleted);
            }
            base.InvokeAsync(this.onBeginReverseGeocodeDelegate, new object[] {
                        lLatitude,
                        lLongitude}, this.onEndReverseGeocodeDelegate, this.onReverseGeocodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> GetZones(int iUserID) {
            return base.Channel.GetZones(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZones(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZones(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> EndGetZones(System.IAsyncResult result) {
            return base.Channel.EndGetZones(result);
        }
        
        private System.IAsyncResult OnBeginGetZones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetZones(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetZones(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> retVal = this.EndGetZones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZonesCompleted(object state) {
            if ((this.GetZonesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZonesCompleted(this, new GetZonesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZonesAsync(int iUserID) {
            this.GetZonesAsync(iUserID, null);
        }
        
        public void GetZonesAsync(int iUserID, object userState) {
            if ((this.onBeginGetZonesDelegate == null)) {
                this.onBeginGetZonesDelegate = new BeginOperationDelegate(this.OnBeginGetZones);
            }
            if ((this.onEndGetZonesDelegate == null)) {
                this.onEndGetZonesDelegate = new EndOperationDelegate(this.OnEndGetZones);
            }
            if ((this.onGetZonesCompletedDelegate == null)) {
                this.onGetZonesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZonesCompleted);
            }
            base.InvokeAsync(this.onBeginGetZonesDelegate, new object[] {
                        iUserID}, this.onEndGetZonesDelegate, this.onGetZonesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> GetActiveZones(int iUserID) {
            return base.Channel.GetActiveZones(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActiveZones(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveZones(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> EndGetActiveZones(System.IAsyncResult result) {
            return base.Channel.EndGetActiveZones(result);
        }
        
        private System.IAsyncResult OnBeginGetActiveZones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetActiveZones(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetActiveZones(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.ZoneInfo> retVal = this.EndGetActiveZones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActiveZonesCompleted(object state) {
            if ((this.GetActiveZonesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveZonesCompleted(this, new GetActiveZonesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveZonesAsync(int iUserID) {
            this.GetActiveZonesAsync(iUserID, null);
        }
        
        public void GetActiveZonesAsync(int iUserID, object userState) {
            if ((this.onBeginGetActiveZonesDelegate == null)) {
                this.onBeginGetActiveZonesDelegate = new BeginOperationDelegate(this.OnBeginGetActiveZones);
            }
            if ((this.onEndGetActiveZonesDelegate == null)) {
                this.onEndGetActiveZonesDelegate = new EndOperationDelegate(this.OnEndGetActiveZones);
            }
            if ((this.onGetActiveZonesCompletedDelegate == null)) {
                this.onGetActiveZonesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveZonesCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveZonesDelegate, new object[] {
                        iUserID}, this.onEndGetActiveZonesDelegate, this.onGetActiveZonesCompletedDelegate, userState);
        }
        
        public string SaveZone(WlocateWeb.FINDOriginal.ZoneInfo udtZone) {
            return base.Channel.SaveZone(udtZone);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveZone(WlocateWeb.FINDOriginal.ZoneInfo udtZone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveZone(udtZone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveZone(System.IAsyncResult result) {
            return base.Channel.EndSaveZone(result);
        }
        
        private System.IAsyncResult OnBeginSaveZone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.ZoneInfo udtZone = ((WlocateWeb.FINDOriginal.ZoneInfo)(inValues[0]));
            return this.BeginSaveZone(udtZone, callback, asyncState);
        }
        
        private object[] OnEndSaveZone(System.IAsyncResult result) {
            string retVal = this.EndSaveZone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveZoneCompleted(object state) {
            if ((this.SaveZoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveZoneCompleted(this, new SaveZoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveZoneAsync(WlocateWeb.FINDOriginal.ZoneInfo udtZone) {
            this.SaveZoneAsync(udtZone, null);
        }
        
        public void SaveZoneAsync(WlocateWeb.FINDOriginal.ZoneInfo udtZone, object userState) {
            if ((this.onBeginSaveZoneDelegate == null)) {
                this.onBeginSaveZoneDelegate = new BeginOperationDelegate(this.OnBeginSaveZone);
            }
            if ((this.onEndSaveZoneDelegate == null)) {
                this.onEndSaveZoneDelegate = new EndOperationDelegate(this.OnEndSaveZone);
            }
            if ((this.onSaveZoneCompletedDelegate == null)) {
                this.onSaveZoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveZoneCompleted);
            }
            base.InvokeAsync(this.onBeginSaveZoneDelegate, new object[] {
                        udtZone}, this.onEndSaveZoneDelegate, this.onSaveZoneCompletedDelegate, userState);
        }
        
        public string DeleteZone(int iZoneID) {
            return base.Channel.DeleteZone(iZoneID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteZone(int iZoneID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteZone(iZoneID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteZone(System.IAsyncResult result) {
            return base.Channel.EndDeleteZone(result);
        }
        
        private System.IAsyncResult OnBeginDeleteZone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iZoneID = ((int)(inValues[0]));
            return this.BeginDeleteZone(iZoneID, callback, asyncState);
        }
        
        private object[] OnEndDeleteZone(System.IAsyncResult result) {
            string retVal = this.EndDeleteZone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteZoneCompleted(object state) {
            if ((this.DeleteZoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteZoneCompleted(this, new DeleteZoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteZoneAsync(int iZoneID) {
            this.DeleteZoneAsync(iZoneID, null);
        }
        
        public void DeleteZoneAsync(int iZoneID, object userState) {
            if ((this.onBeginDeleteZoneDelegate == null)) {
                this.onBeginDeleteZoneDelegate = new BeginOperationDelegate(this.OnBeginDeleteZone);
            }
            if ((this.onEndDeleteZoneDelegate == null)) {
                this.onEndDeleteZoneDelegate = new EndOperationDelegate(this.OnEndDeleteZone);
            }
            if ((this.onDeleteZoneCompletedDelegate == null)) {
                this.onDeleteZoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteZoneCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteZoneDelegate, new object[] {
                        iZoneID}, this.onEndDeleteZoneDelegate, this.onDeleteZoneCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> GetTags(int iUserID) {
            return base.Channel.GetTags(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTags(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTags(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> EndGetTags(System.IAsyncResult result) {
            return base.Channel.EndGetTags(result);
        }
        
        private System.IAsyncResult OnBeginGetTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetTags(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetTags(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.TagInfo> retVal = this.EndGetTags(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagsCompleted(object state) {
            if ((this.GetTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagsCompleted(this, new GetTagsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagsAsync(int iUserID) {
            this.GetTagsAsync(iUserID, null);
        }
        
        public void GetTagsAsync(int iUserID, object userState) {
            if ((this.onBeginGetTagsDelegate == null)) {
                this.onBeginGetTagsDelegate = new BeginOperationDelegate(this.OnBeginGetTags);
            }
            if ((this.onEndGetTagsDelegate == null)) {
                this.onEndGetTagsDelegate = new EndOperationDelegate(this.OnEndGetTags);
            }
            if ((this.onGetTagsCompletedDelegate == null)) {
                this.onGetTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagsDelegate, new object[] {
                        iUserID}, this.onEndGetTagsDelegate, this.onGetTagsCompletedDelegate, userState);
        }
        
        public string SaveTag(WlocateWeb.FINDOriginal.TagInfo udtTag) {
            return base.Channel.SaveTag(udtTag);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveTag(WlocateWeb.FINDOriginal.TagInfo udtTag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTag(udtTag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSaveTag(System.IAsyncResult result) {
            return base.Channel.EndSaveTag(result);
        }
        
        private System.IAsyncResult OnBeginSaveTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WlocateWeb.FINDOriginal.TagInfo udtTag = ((WlocateWeb.FINDOriginal.TagInfo)(inValues[0]));
            return this.BeginSaveTag(udtTag, callback, asyncState);
        }
        
        private object[] OnEndSaveTag(System.IAsyncResult result) {
            string retVal = this.EndSaveTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTagCompleted(object state) {
            if ((this.SaveTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTagCompleted(this, new SaveTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTagAsync(WlocateWeb.FINDOriginal.TagInfo udtTag) {
            this.SaveTagAsync(udtTag, null);
        }
        
        public void SaveTagAsync(WlocateWeb.FINDOriginal.TagInfo udtTag, object userState) {
            if ((this.onBeginSaveTagDelegate == null)) {
                this.onBeginSaveTagDelegate = new BeginOperationDelegate(this.OnBeginSaveTag);
            }
            if ((this.onEndSaveTagDelegate == null)) {
                this.onEndSaveTagDelegate = new EndOperationDelegate(this.OnEndSaveTag);
            }
            if ((this.onSaveTagCompletedDelegate == null)) {
                this.onSaveTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTagCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTagDelegate, new object[] {
                        udtTag}, this.onEndSaveTagDelegate, this.onSaveTagCompletedDelegate, userState);
        }
        
        public string DeleteTag(int iTagID) {
            return base.Channel.DeleteTag(iTagID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteTag(int iTagID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTag(iTagID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDeleteTag(System.IAsyncResult result) {
            return base.Channel.EndDeleteTag(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iTagID = ((int)(inValues[0]));
            return this.BeginDeleteTag(iTagID, callback, asyncState);
        }
        
        private object[] OnEndDeleteTag(System.IAsyncResult result) {
            string retVal = this.EndDeleteTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTagCompleted(object state) {
            if ((this.DeleteTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTagCompleted(this, new DeleteTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTagAsync(int iTagID) {
            this.DeleteTagAsync(iTagID, null);
        }
        
        public void DeleteTagAsync(int iTagID, object userState) {
            if ((this.onBeginDeleteTagDelegate == null)) {
                this.onBeginDeleteTagDelegate = new BeginOperationDelegate(this.OnBeginDeleteTag);
            }
            if ((this.onEndDeleteTagDelegate == null)) {
                this.onEndDeleteTagDelegate = new EndOperationDelegate(this.OnEndDeleteTag);
            }
            if ((this.onDeleteTagCompletedDelegate == null)) {
                this.onDeleteTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTagCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTagDelegate, new object[] {
                        iTagID}, this.onEndDeleteTagDelegate, this.onDeleteTagCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> GetAssets(int iUserID) {
            return base.Channel.GetAssets(iUserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssets(int iUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssets(iUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> EndGetAssets(System.IAsyncResult result) {
            return base.Channel.EndGetAssets(result);
        }
        
        private System.IAsyncResult OnBeginGetAssets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iUserID = ((int)(inValues[0]));
            return this.BeginGetAssets(iUserID, callback, asyncState);
        }
        
        private object[] OnEndGetAssets(System.IAsyncResult result) {
            System.Collections.Generic.List<WlocateWeb.FINDOriginal.AssetInfo> retVal = this.EndGetAssets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssetsCompleted(object state) {
            if ((this.GetAssetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssetsCompleted(this, new GetAssetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssetsAsync(int iUserID) {
            this.GetAssetsAsync(iUserID, null);
        }
        
        public void GetAssetsAsync(int iUserID, object userState) {
            if ((this.onBeginGetAssetsDelegate == null)) {
                this.onBeginGetAssetsDelegate = new BeginOperationDelegate(this.OnBeginGetAssets);
            }
            if ((this.onEndGetAssetsDelegate == null)) {
                this.onEndGetAssetsDelegate = new EndOperationDelegate(this.OnEndGetAssets);
            }
            if ((this.onGetAssetsCompletedDelegate == null)) {
                this.onGetAssetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssetsDelegate, new object[] {
                        iUserID}, this.onEndGetAssetsDelegate, this.onGetAssetsCompletedDelegate, userState);
        }
    }
}
